%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Visio-multi-tier_node_modelling.vsd)
%%Version: 1 5
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 16:14:09 02/10/10
%%For: (Administrator)
%%DocumentData: Clean7Bit
%%BoundingBox: 221 328 409 514
%%HiResBoundingBox: 220.799332 327.598999 409.198746 513.598434
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0
%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.18 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.18 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1266 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:a1d45615-5df8-4037-94ce-f5d0e8428479' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:a1d45615-5df8-4037-94ce-f5d0e8428479' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreatorTool='PScript5.dll Version 5.2' xap:ModifyDate='2009-05-02T14:47:55+01:00' xap:CreateDate='2009-05-02T14:46:36+01:00' xap:MetadataDate='2009-05-02T14:47:55+01:00'></rdf:Description>
<rdf:Description rdf:about='uuid:a1d45615-5df8-4037-94ce-f5d0e8428479' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:c72e08f1-5dff-49af-a331-a809be7ad978'/>
<rdf:Description rdf:about='uuid:a1d45615-5df8-4037-94ce-f5d0e8428479' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Visio-multi-tier_node_modelling.vsd</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>Administrator</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
221 328 188 186 rectclip
[ 0 -1 1 0 -106.79967 734.39777 ] concat
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT Initial
ct_T42Dict begin
-0.496 -0.305 1.117 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /ALAKLK+TimesNewRomanPS-ItalicMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32a02c8d29000000cc000000566376
7420ff44a29700000124000007786670676d015abb920000089c000005cd
676c7966b979122e00003da800000a0e68656164c514940800000e6c0000
0036686865610c7d077200000ea400000024686d74781197607500000ec8
00000eb06c6f63610021de6a00001d7800000eb46d61787008d90c500000
2c2c000000206e616d65b7097bee00002c4c0000069670726570791a47c3
000032e400000ac367646972000000000000000000000000000103370190
00050000059a0533002c0125059a0533004c03a000660212010502020503
05040509030400000a870000000000000000000000004d6f6e6f00010020
fffc058efe460133072101bb400001bfdff7000035c0058e0000054c001f
054c001c037100180000ffe10000ffe80000ffe8fe4afffc056b0023fe68
ffe2033e00000095000000950000000000000000002500a8008e010b007d
00820045003200a400ca006b0070005100af003c00f001d7004700040025
00770029004000fd00160161004601370029008e0017ffca0025005bffe9
02e600020099008100f2007500d6006300c60006009a01330024003800cc
003dff67001305d8003600860095ffdb0007043400a500d8ffdcfffe0048
00a200d8013c01530380053e0057007a007c008c0117012a0138017c0026
003c007800bd00c0021009b5000c004d004e00540058006700b404010002
0005005000af01d5034300240058008b013501c0ffac002000250026002d
00410136022bffba001e002a0034003b003f00850094009800d7012e013d
033104b900170040006100b9010e0116012201bfff9c001f001f004d005c
0086008c009600aa00cb00cb011f0154022f036005a9fee8000e006f007c
007d008b00d500f1010a0157017802b803adfe3fff6affb3ffc4001f0037
003f0044004a0078007d009700a200a700b600c000c100c600d8011d0150
019701ee04740532fd81fed1fee0ff16fff1000f002d00550068006e007f
00890095009e00c200da00e400f801040108011101c2023002da030e049e
0517ff00ff8700000020002f00410057007800870088008800b900c200c5
012001280133017401d6020e020f026c027e02ab02ec038903b103e304e7
ff43ffa8ffc3ffdcffe9000700230023002600520077007d0081008f0099
00ac00ae00b500b800c800ea00f000f40135016a018b01b101b501f70214
02ad02d504fc05d805f0ff9dfffc000b00240025002c0030003000330040
004700490057006e009a00bd00c900cd00dc00fa00fa011b0139017e0187
018a018e0195019601df01f6028602cf02de039603a903b003c804010432
046a058b05e006510761fe96fe9aff4bff870013002500340038003e004a
0065006b0073007a009c00a200b200b700bf00f000f700fb010401130120
0124013b01520178017c0181018f01a001d90248026a026f02700301031d
032303270388041f04ab04d104da057a058bfe26fe59ff2e00010002000a
003b003b004700580058005f0066006b007a007a008b009900af00bc00c0
00c700cc00e900f200f500fb00fb0102010a010b01150121012701450145
015501570158015e01610168017d01a301ab01da01ee021002180222028f
029402a302d202e703710393039b03b303d303fe04ff050b05320532054b
0559058b05ab05f2065506890742076207a708ccfd2afdc8fddefe0cfe15
fe27fe53fe84febbff58ff76ff77ffa1ffa7ffadffafffc0000000000003
0094001d001f002000200027002e0048004b004c005e005f006b0071007c
008a00900091009100a700af00b300b400c400c600d100d200de00df00df
00e600e800ea00eb00f200f500f500fc010201180123013101330137015c
016201660170017a017a017a018201980199019b01b001bf01c001ca01d3
01d701d801e001e001f601f701f802120213022f023702440247024f0252
026302650270027f0298029b02a602b702ba02c502cf02d602d702e502fe
031c031d03450348035d035e03710379038103a103b703d403d503d803e1
03f803fe0404041f042104230425043a0467048304e00528054b0564056a
059f059f05c2060b066a06af06b306cb06e8070607280748075007a607b2
07ff009500af00920096000000000000000000000000017e01a80129025b
0212020301c302b4019301cd02b204ed020e0159017a0300022d042c00c8
004d00e602890325013e0378011b00f1018d00490203007c000e029d0247
0024000000000052004400330038005405d3041501a70000028601680050
00cf0002004b0024008800ba0025ffd800110091ff6b00b5011700260065
ff9900490080014b01c000f40167027102ea04fc0310017c01e103d90155
01e601ee0434019606cb005c022b0099003d009f00160039002700de0079
0120022e005a00990388009400210019002a046c05e8000001f203b200aa
0296028902b4ffc9020000ec0005005a0447010004e00000052a001f01eb
00ae016800ca02d3028901b5040601a1014f014b011c0308005e00c70024
029d006503750104028002f304d800d90239025a032c01f2043103030050
02e50283005901eb010800ac019602f8012100950180004400e501eb02e5
007400f301ff02fd038f026801c801c70116022b0142033000fe02e10162
0200002400ee05170108023700660006010201e602aa0366019b00d305c2
03dc044d03b6000401be013702fc03200244014d0338ffed002506f8030d
fed5ff43004402ffff92040bfdef0155017100d9ffc4032d0461044afbb5
fbcf02170192036d0558fff2fe7d0583023e006605e9073d007902430025
00cf00fd00af002a01ef021a0026001f0025003a000001170490fbfb0251
001d02f001f50078018f005f00240044005400bf00af006701a800260005
0006003f009800fa02ab00c2004d0375004a00b600c401bf017c006f0013
0263000c006801520002012e0104001f001f009a000000f1046900790080
005000bd056b00ab0080001e05a5404154403f3e3d3c3b3a393837353433
3231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918171615
14131211100f0e0d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00
b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a2344
45b01923442d2c2045b00325456164b050515845441b2121592d2cb00143
632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a
2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0
0361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2c
b01243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a
8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2c
b0022546608a46b040618c482d2c01182f2d2c20b0032545b019234445b0
1a23444565234520b00325606a20b009234223688a6a606120b01a8ab000
527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb11400
8a5279b31940201945208a54582321b03f1b235961442d2cb11011432343
0b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d
2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b212159
2d2c0120b003252349b04060b0206320b000525823b002253823b0022565
38008a63381b212121212159012d2c4bb06451584569b00943608a103a1b
212121592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b0
06430b2d2c3eb02a2a2d2c352d2c76b802ee23701020b802ee4520b00050
58b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c64
23648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb8
1555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb4
000100000015b00826b00826b00826b008260f10161345683ab001162d2c
b4000100000015b00826b00826b00826b008260f1016134568653ab00116
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb013
4358031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121
592d2cb012435c580cb00425b00425060c6423646164b807085158b00425
b00425012046b01060482046b0106048590a21211b2121592d2cb012435c
580cb00425b00425060c6423646164b807085158b00425b00425012046b8
fff060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a
2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab0
12435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab01243
5c5a58381b2121592d2c462346608a8a462320468a608a61b8ff80622320
10238ab903b003b08a70456020b0005058b00161b8ffba8b1bb0468c59b0
106068013a2d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
59b12401885458b2022002436042004b014b5258b2020802436042591bb9
40000080885458b202040243604259b94000008063b80100885458b20208
0243604259b94000010063b80200885458b2021002436042595959592d0c
9fc2000100000002e667a5323a145f0f3cf50819080000000000a31fb8bd
00000000b5c9aa29fc05fd8c08f6083000000009000100010000a2c20001
00000721fe450057086bfc05fcfe08f60018000700000000000000000000
000003ac0639011c00000000020000000200000002aa009a035c01260400
00930400005606aa00900639006201b6010d02aa008c02aaff2104000122
056600be0200ffeb02aa0036020000450239ffbb0400007a0400007d0400
002004000044040000400400004904000081040000e80400004e0400003b
02aa007a02aa002405660096056600c805660096040000c6075c006104e3
ff9c04e3ffd10556008a05c7ffc304e3ffd204e3ffce05c7008e05c7ffca
02aaffc0038dffba0556ffc90473ffbe06aaffbd0556ffc705c7007a04e3
ffcf05c7006104e3ffd10400000e0473008f05c700da04e3010006aa00f9
04e3ff77047300b80473fffc031d000d023900da031dff33036000380400
ffef02aa01680400003004000036038d003804000027038d00400239fe9b
0400ffc904000029023900580239fea0038d00140239004f05c700230400
00270400003c0400ff1e0400002d031d002a031dffed023900540400003c
038d002c05560023038dffb8038dff5c031dffc70333008d023300ed0333
ff670454001404e3ff9c04e3ff9e0556008a04e3ffd20556ffc705c7007a
05c700da040000300400003004000030040000300400003004000030038d
003c038d0040038d0040038d0040038d0040023900580239005802390058
02390058040000270400003c0400003c0400003c0400003c0400003c0400
003c0400003c0400003c0400003c040000dd033300d40400007204000031
0400fffc02cd00ad042f006c0400feb70614008b0614008b07d700be02aa
019902aa010c04640019071dff9405c7004805b40035046400350464005e
0464005a0400fff2049cffd203f4004005b4002b06960092046400480231
0000023500b2027b00e40625005b0556002d0400000504000049031d0090
0566009604640054040000020464001e04e5ffc40400005404000025071d
010a04e3ff9c04e3ff9c05c7007a078d002d055600360400ffee071dffed
0473018a0473017502aa01b202aa01910464003503f4002f038dff600473
00b70156feab0400001102aa007402aa002e0400fe7d0400fe7d0400ffe3
0200009102aa00410473001e0800007f04e3ff9c04e3ffd204e3ff9c04e3
ffd204e3ffd202aaffc002aaffc002aaffc002aaffc005c7007a05c7007a
05c7007a05c700da05c700da05c700da0239005802aa00fe02aa00c602aa
00f602aa012602aa01c102aa017d02aaffdb02aa012f02aa004e02aa0152
0473ffc6023900330400000e031dfff00473fffc031dffad023300ed05c7
ffd004000037047300b7038dff6004e3ffcf0400ff1e056600960566017a
026600a30266006f02660084060000a1060000a1060000820400ffce05c7
008e0400ffc902aaffc00400000e031dffed0556008a038d003c0556008a
038d003c04000027040000c502ab01ee04e3ff9c0400003004e3ff9c0400
003005c7ffc304de002705c7ffd004e3ffd2038d004004e3ffd2038d0040
0473ffbe0239004f0473ffbe02e9004e0473ffbe029500490556ffc70400
00270556ffc70400002705c7007a0400003c04e3ffd1031d002604e3ffd1
031d00260400000e031dffed0473008f0239ffdd0473008f02e9005605c7
00da0400003c05c700da0400003c0473fffc031dffc30473fffc031dffc3
048dffb605c7007d0617009d0433003c03b800300327001603f2003602dd
0033046d004a0400ffef0495009a0285001407eb002f0800004f04000099
0800004f040000990800004f040000980400009807d5016a05c700c00566
00c604cd00990566009804d5022204d5010505abffe904ed01c005ab027e
05abffe905ab027e05abffe905ab027e05abffe905abffe905abffe905ab
ffe905abffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe9
05abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
027e05ab01c005ab01c005abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905ab02d605ab006605abffea05d5ffff
04d500920800000007eb013007eb012007eb013007eb012004d500b204d5
008004d5002a082b0198086b01b807550010060000f40600006f0440003a
0540003704c0003f0415004004000025060000550600ffc30401004b049e
007301c0010d0355012606ab006c0355001e04d5009202d6008302d60083
04d500b202d6007004e3ff9c040000300556008a038d003a0556008a038d
003a04e3ffd2038d004004e3ffd2038d004004e3ffd2038d004005c7008e
0400ffc905c7008e0400ffc905c7008e0400ffc805c7ffca0400002905c7
ffca0400002902aaffc00239005402aaffc00239005802aaffc002390054
02aaffc0023a0034038dffba0239fea00556ffc9038d0014038d00140473
ffbe0239ffa20556ffc7040000270592ffc003db002705c7007a0400003c
05c7007a0400003c04e3ffd1031dfff90400000e031dffed04730093023a
003105c700da0400003c05c700da0400003c05c700da0400003c05c700de
0400003c06aa00f905560023047300b8038dff5e0239fe9d04e3ffa50400
0030071dff940556002d05c700480400000502aa014d06aa00f905560023
06aa00f90556002306aa00f905560023047300b8038dff5e02aa01bd02aa
00b70400003104cd005a060000a10600008206000084060000e802aa004c
02aaffdb02aa019902aa00b404e3ff9c056f005d065600590337004d05c7
007a0548005e05cf00200239005404e3ff9c04e3ffd104b2ffa704e3ffd2
0473fffc05c7ffca02aaffc00556ffc904d5ff8f06aaffbd0556ffc7051d
fff205c7007a05c7ffc504e3ffcf04c1ffb90473008f047300b804e3ff77
05a0011305c9001b02aaffc0047300bc0433003c0327001603f8003a0239
005503ac003503fcff7703270031033d002f03f8003a03ee005a02390055
03d7001f0377ffc00404ff94038d002c036d00250400003c03d7ff6f033f
003f03ac00350385ff4004f8008f05a600480239005503ac00350400003c
03ac00350595003f04e3ffce066000c1048dffb6055a008e0400000e02aa
ffc002aaffc0038dffba076bffbb075effc2066400c60550ffc7056200e1
05c7ffcd04e3ff9c04b8ffc604e3ffd1048dffb60517ff2d04e3ffd20754
ff9003f6fffe05c7ffcc05c7ffcc0550ffc7056bffb906aaffbd05c7ffca
05c7007a05c7ffc504e3ffcf0556008a0473008f056200e1066f009504e3
ff7705c7ffcc058300e70858ffe40858ffe40568007606faffc604b8ffc6
053d001e0842ffbe0542ff9104000030040600490379003f031f0002040c
003d038d00400771ffff031fffce0400003c0400003c03be0025037dffa5
051bffa403f800290400003c040000270400ff1e038d003805c70023038d
ff5c05ae003c038dffb80400003c03d10056060a0040060a00400427003c
056b006603a400660387000f05a4002a03b8ff84038d003c03d500280304
ffaa037d0036031dffed02390058023900550239fea0056fffa605b2002a
0400002903be0025038dff5c040000250385ffc30285005608000041078b
ffa80402003202aa003502aaff4f02aaff6502aaff4502aa003502aaffc2
02aaffc202aaffc302aaffc302aa01cf02aaff4f02aa010202aa005402f7
00ed02aa015c02aa005f02be037c02be003702aa007a03d3ffd5037fffc5
0291ff7e035700bd03ceffd1021c00bf0208002903c4fffa03d3005901ef
00c6038000c10349ffc7037000c703c8ffe403c3ffde020b004a023cff9d
03b1006b0383ffcd0372004f036effd5039000c50397fff0038eff8f0395
00bc04f500c203cbff85043800bf040b00c603de00c60186009b02f1009b
064c0010021c0041038000c10380008f03700016037000160383ffd104f5
00c204f500c204f500c204f500c203d3ffd503d3ffd503d3ffd5037fffc5
0291ff7e035700bd03ceffd1021c00620225000c03d3005901ef005a0380
00c10349ffc7037000c703c3ffde023cff9d03b1006b0372004f036effd5
0397fff0038eff8f038e009d04f500c203cbff85021c00bf037fffc50349
ffc7036effd50448004a0000ffdc0000ff250000ffdc0000fe510400005a
0800000005c7007a0445003c060800da045d003c0000ff1a0000fdf20000
fdb40000ff910000fef60000fee40000ff780000ff8a0000fe880000fefb
0000fea20000fe6e0000fdf4000000350000001f0000fe47041a00780600
00a10600006f0000ff2b0000fe6c0000fe8a0000fdd20000ff1e0000fe38
0000fdcd0000fd190000fce70000fd710000fd3f0000fcf90000fccd0000
fc050000fc050000fc550000fc0f0000ff190000ffa20000fe310000fc55
0000fcef0000fd9c0000fdda0000fca10000fd530000fcef0000fcb30000
fd0d0000fcb30000fdba0000fd940000fd7e0000fd300239005804e3ff9c
0400003004e3ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3
ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3ff9c04000030
04e3ff9c0400003004e3ff9c0400003004e3ff9c0400003004e3ff9c0400
003004e3ffd2038d004004e3ffd2038d004004e3ffd2038d004004e3ffd2
038d004004e3ffd2038d004004e3ffd2038d004004e3ffd2038d004004e3
ffd2038d004002aaffc00239005802aaffc00239003105c7007a0400003c
05c7007a0400003c05c7007a0400003c05c7007a0400003c05c7007a0400
003c05c7007a0400003c05c7007a0400003c05c7007a0445003c05c7007a
0445003c05c7007a0445003c05c7007a0445003c05c7007a0445003c05c7
00da0400003c05c700da0400003c060800da045d003c060800da045d003c
060800da045d003c060800da045d003c060800da045d003c047300b8038d
ff5c047300b8038dff5c047300b8038dff5c04e3ff9c0400003002aaffc0
0239005805c7007a0400003c05c700da0400003c05c700da0400003c05c7
00da0400003c05c700da0400003c05c700da0400003c000000be000000be
000000be000000be048dffb6031f00020754ff900771ffff0550ffc703be
00250550ffc703be002505c7ffca03f80029047300b804000003047300b8
0400ffdf04e3ff77038dffb8058300e703d100560583ffca04000027058f
007a038d001b05c7007a0400003c00000000000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
006800000068000000680000006800000068000000680000006800000068
000000680000006800000068000000680000006800000068000000680000
01ec000001ec000001ec000001ec000001ec000001ec0000039000000390
00000390000003900000039000000390000003900000057e0000075e0000
075e000008a200000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0000
0a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e
00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e00000a0e0001
000003ac00f2003c0068000500020010002f0055000004830ac300030002
0000000e00ae000000030000000000fe0000000000030000000700d800fe
0001000000000000007f01d60001000000000003001f0255000100000000
0004001f02740001000000000006001f02930001000000000007006c02b2
000300010409000000fe031e0003000104090001002c041c000300010409
0002000e04480003000104090003003e04560003000104090004003e0494
0003000104090006003e04d2000300010409000700d80510005400790070
00650066006100630065002000a900200054006800650020004d006f006e
006f007400790070006500200043006f00720070006f0072006100740069
006f006e00200070006c0063002e00200044006100740061002000a90020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e00200070006c0063002f0054
00790070006500200053006f006c007500740069006f006e007300200049
006e0063002e00200031003900390030002d0031003900390032002e0020
0041006c006c002000520069006700680074007300200052006500730065
007200760065006400540069006d006500730020004e0065007700200052
006f006d0061006e00ae002000540072006100640065006d00610072006b
0020006f006600200054006800650020004d006f006e006f007400790070
006500200043006f00720070006f0072006100740069006f006e00200070
006c00630020007200650067006900730074006500720065006400200069
006e00200074006800650020005500530020005000610074002000260020
0054004d0020004f00660066002e00200061006e006400200065006c0073
006500770068006500720065002e547970656661636520a920546865204d
6f6e6f7479706520436f72706f726174696f6e20706c632e204461746120
a920546865204d6f6e6f7479706520436f72706f726174696f6e20706c63
2f5479706520536f6c7574696f6e7320496e632e20313939302d31393932
2e20416c6c20526967687473205265736572766564414c414b4c4b2b5469
6d65734e6577526f6d616e50532d4974616c69634d54414c414b4c4b2b54
696d65734e6577526f6d616e50532d4974616c69634d54414c414b4c4b2b
54696d65734e6577526f6d616e50532d4974616c69634d5454696d657320
4e657720526f6d616ea82054726164656d61726b206f6620546865204d6f
6e6f7479706520436f72706f726174696f6e20706c632072656769737465
72656420696e2074686520555320506174202620544d204f66662e20616e
6420656c736577686572652e005400790070006500660061006300650020
00a900200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e00200070006c0063
002e00200044006100740061002000a900200054006800650020004d006f
006e006f007400790070006500200043006f00720070006f007200610074
0069006f006e00200070006c0063002f005400790070006500200053006f
006c007500740069006f006e007300200049006e0063002e002000310039
00390030002d0031003900390032002e00200041006c006c002000520069
00670068007400730020005200650073006500720076006500640041004c
0041004b004c004b002b00540069006d00650073004e006500770052006f
006d0061006e005000530052006500670075006c006100720041004c0041
004b004c004b002b00540069006d00650073004e006500770052006f006d
0061006e00500053002d004900740061006c00690063004d00540041004c
0041004b004c004b002b00540069006d00650073004e006500770052006f
006d0061006e00500053002d004900740061006c00690063004d00540041
004c0041004b004c004b002b00540069006d00650073004e006500770052
006f006d0061006e00500053002d004900740061006c00690063004d0054
00540069006d006500730020004e0065007700200052006f006d0061006e
00ae002000540072006100640065006d00610072006b0020006f00660020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e00200070006c006300200072
00650067006900730074006500720065006400200069006e002000740068
006500200055005300200050006100740020002600200054004d0020004f
00660066002e00200061006e006400200065006c00730065007700680065
00720065002effffba0054ffc003bbb345453240b803bbb32b2e3240b803
bbb2282932b9ffc003bbb31a263280411303bb009f03bb00af03bb00cf03
bb0004000003bb001f03bb000203bb02af0027001fffc003b9b2161b32b9
ffc003b8b2424232b9ffc003b8b2363832b9ffc003b8b32a2d32df410a03
b800ef03b8000203b803b90028001fffc003b9b3282e32f0410b03b90001
000003b7000103b700030800001f03b60381b23a1f0f411703b3001003b2
002003b2005003b2007003b200e003b2000600cf03b300df03b300ef03b3
00ff03b30004001203a8b2e2891fbe039f016b019a001f03980093080140
0c1f7f047f05027f027f03025fbb02b00001ffc00117b2196632b8ffc0b3
651a6632b9ff800173b2196632bd038401170800001fffc002afb2313340
b802afb22e3340b802afb328293240b802afb326273240b802afb3212532
40b802afb31c203240b802afb2233340b802afb21933a0bc02af00b002af
00e002afb5034003212932b8fff2b33a263d32bc038203820382003a0800
b51f40255c331eb80381b25c6432b8ffeeb3252e3314b80381b32b2e3269
be03810001008a03810001000e0381b32b2f3210b80381b3515b320cb803
81b34e513222b80381b3474d320eb80381b246330ab80381400926473212
254358320cb80381b2323310b80381b22a3312b80381b3373d3212bb0381
003d0033fff44015253d331825355b32102526343206252a330c252e33b8
fffe4024252d330c3a2f33329925aa25ba25c92504052536330c25323832
193a293a383a03182517b80381b42825382504bc03810381038100250800
40101f0f1f2b2e32691f781f020b1f303332b8fff1b31f263d32bc038003
800380001f080040151f375f07af07025f06af060222ac2b2e3209ac2f33
b8ffdc400aac1f223222232b52320eb8037fb229330eb8037fb2223314b8
037fb21e2032b8ffe7b71e2b33321e2b2f32b9ffc0037fb64c4f3232262c
33410affee037f00390033fff8037f002b0033ffea037fb23a3320b8037f
b33f46321eb8037fb32f3a3212b8037fb22e331eb8037fb32a2d320eb803
7fb2263304b8037fb3494a3404b8037fb2463304b8037fb2213318b8037f
400c1d3322263032322226333832b8fff8400a262b2f3209261b21328abe
037f0001037f037f037f00260800402e1f371f062f063f06039f02af02bf
02cf02049f03af03bf03cf03046f037f038f03031f032f033f034f035f03
050f413502ed0001005f02ed009f02ed00df02ed0003002f02ed003f02ed
006f02ed000300af02af0001004f02af009f02af0002002f02af003f02af
0002003f02b00001004f02af005f02af0002002f02af003f02af00020070
03b2000103b203b202ed02ed02b002b002af02af401a3701003001400102
010100090102000800171700000012110840410b027b02230034000d013d
0034000d01370034000d011b401a340d8f340d84340d68340d59340d5434
0d48340d2c340d28340d411002350020000d021b0020000d01fc0020000d
01c30020000d01500020000d012c401a200df0200dbe200d94200d79200d
6a200d61200d5f200d44200d410d013e0138000d003d0138000d00300138
000d001d0138000d01fdb40f4d0f0009bf01fd004d000d03b1037f001500
1f0215b226341fb80214b2263f1fb80208b21ebb1f41190206001e080100
1f0205001f02ab001f0204001f02ab001f0203001f0401001f0201003101
9a001f01fb00230156001f01aeb2262a1fb801adb2262a1fb801abb22634
1f411501a8002602ab001f01a5001e0125001f01a400ab02ab001f01a200
3102ab001f01a1003102ab001f019db2236c1fb8019cb2236c1f4109019b
00230401001f019a0033019a001f0176b2262e1fb8016cb231721f411101
6b0023019a001f016800240401001f014500260801001f013f0023040100
1f0123b21e9e1fbc0121001e0201001f0100b426791ffd1fb80125b21ffa
33b80801b21ff924b802abb21fe826b80101b21fe51fb8019ab21fe431b8
0101400b1fe331e41fe231891fd226b80201b61fd026cd1fcd25b80401b2
1fb731b8019ab21fae26b80801b21fac1eb80401400b1f9e315e1f97269e
1f9333b80801b21f8a24b8019ab21f831fb802ab40131f82236c1f7523e4
1f7026cd1f6423721f5e25b80401b21f5d23b802abb21f55e6b80401b21f
5324b80201b21f4f33b802abb21f4e26b8040140131f4731671f4626ab1f
4331cd1f3e235e1f3a1fb80401b61f3924e41f3723b80801b21f2e23b804
01b21f2a1eb80125400b1f2923ab1f2731ab1f5537bc01c60007018a0007
012b402e077f077107690766074b074007380736072d0722072107140812
0810080e080c080a080808060804080208000814b8ffe0402b0000010014
061000000100060400000100041000000100100200000100020000000100
0002010802004a00b013034b024b5342b0372b4bb807ff52b0382b4bb009
505b58b101018e59014bb0c063004b6220b0f65323b8010a515ab0052342
01b0124b004b544218b0382bb00288b801005458b801ffb101018e851bb0
124358b900010140858d1bb900010159858d59590016763f183f123e1139
46443e113946443e113946443e113946443e11394660443e11394660442b
2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b181db096
4b5358b0aa1d59b0324b5358b0ff1d594bb04753205c58b9027d027b4544
b9027c027b45445958b90146027d455258b9027d01464459594bb0475320
5c58b9001e027c4544b90026027c45445958b9017f001e455258b9001e01
7f4459594bb05e53205c58b9001f027d4544b90025027d45445958b901a8
001f455258b9001f01a84459594bb8010153205c58b1ab1f4544b11f1f45
445958b9047000ab455258b900ab04704459594bb8012553205c58b1e61f
4544b11f1f45445958b9051000e6455258b900e605104459594bb0175320
5c58b124244544b1312445445958b12224455258b124224459594bb05153
205c58b124244544b1232445445958b17d24455258b1247d4459594bb06e
53205c58b124244544b1332445445958b1aa24455258b124aa4459592b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b45695342014b5058b108004259435c58
b1080042591610703eb0124358b911b53d801bba011c03d9000b2b59b00a
2342b00b2342003f3f182b103c012f5d060cb0062342b0072342b0124358
b93b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d41
2d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211b
ba01a80400000b2b59b0102342b0112342002b4bb02e5358b8016b45b02a
60b8016b2344590018456944456944184569444569447373737375757573
737475757575752b4bb026534bb03d515a58b1262645b0196044592b4518
6944742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
004bb02a534bb03f515a58b1070745b04060445973732b2b451869442b2b
752b2b4518694475752b2b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
74752b2b2b2b2b451869442b002b732b2b2b2b2b2b2b2b2b012b2b2b0073
73732b2b2b01435c58b8ffdeb31e1c3318b8037fb52b3318262b33b9fff0
0381b112332b2b2b2b590173742b002b73752b2b732b2b2b2b2b73752b2b
2b2b2bc000>
[2575 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
end
%ADOEndSubsetFont
[/N16/ALAKLK+TimesNewRomanPS-ItalicMT 1 TZ
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT Initial
ct_T42Dict begin
-0.566 -0.305 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /ALALCB+TimesNewRomanPSMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3210732def000000cc000000566376
7420f32cda8100000124000007c66670676dc3a61d01000008ec00000631
676c7966fc1c84f1000059d400000bda68656164cf5b1d8300000f200000
00366868656112ef12f600000f5800000024686d7478b14216ca00000f7c
00001a286c6f6361004c0c28000029a400001a2c6d6178700d0110ae0000
43d0000000206e616d6507280345000043f0000006cd70726570e43894a4
00004ac000000f1367646972000000000000000000000000000103350190
00050000059a053300000125059a0533000003a000660212010502020603
05040502030400007a878000000000000008000000004d6f6e6f00400020
fffc058cfe460133072101bb400001ffffff00000000058e0000054c001f
054c001c0394001b0000ffe10000ffe40000ffe8fe4afffc056b0023fe6a
ffe00313000000ad000000ad0000000000250096009f002400f0013100c2
00c0004a00a6004100500094004700cf00af000e007901cb000400230044
00a80025011f0002004600170105009900d9005c007200e500e00028004b
00de011200240045007000160039ffe90016004b0088ffb900d9000a0043
00ae00ba016c0153002f00430048022c012b0025008fffc000170028ffcd
ffd80025009d00e50124ffb10048009d00e600110027007f00910012006a
00cafffc00000024006200a7017c01e900210060008b0434048aff6b003b
00b500d5014bff6b004d007905d809b5006c009100a3011701c0ffdfffe7
00be04010065007f00820088009900b200c0022e034305a000200026003d
004e00610065007b00d9011301310340ff27ff42ff99004e00a700f2022b
02c603070011002b0049005f008d00a100af00d600e400f5010b0135019d
01ab01ab01d101ee05d80000004b0075007a0080009d00a600a700ac00b9
013101310217021700020017002900550080008f00a500b200b300d0014b
015901c001c103a50530fe3fff14ff15ffe7ffff002a00580099009f00c1
00e400f40130015901ab01ab03220374041e04740532fd81004d0064009c
00d000d100d600de00e500f500f8012a012a01e1027e027fff57ffa8ffe5
00000008001f00380051005a006f0076007700a200c000c200c400f101fb
0209027e02cf04c5057a05f0ff92001200260042004b004f005100530064
008b00ae00b200b800b800d600f50111012001310138014e01520167018f
019601b801d901d902060221027102ea03b003cb03dc04360505ff3a0012
0016001e001f002300570068006c007e0088009200a500a800c500c90115
0126012d013001d601d901f6023b0244024402a302cf02de0385038f04fc
0586fee0feebfefbff8a0007004400470058007500aa00e400ef01160120
0129016a017301e3027e029002b4030e0310032303350341035403590388
039403c803ce047204ab04da0549056105ab0761fe6efed1ff4bff840000
00010006001e0027002c0034003700620066006a006b006c007000700072
007c0081008a008e0091009200a000ab00b800bf00c900d500dd00ec00f4
0100012101300169016a016d017c0185018e018e019901ac01c101c501c9
01e101f601f601f60222022202280236023f024302460267028502850294
02d002d602e8031c0363037f03800380039e03b603d90400040404ff0532
05320548058b05a706cb07280748076208ccfcedfd2afd59fddefe00fe1a
fe5bfe96fec1fee7ff56ff7900010025002d002e007c00870091009900a1
00a500a500aa00af00b600c600cc00d700dd00ec00f20102010501170118
0123012a012c0131013f014701490149014d01510151015501550157015a
015a0161016201680168017f0180018201830184018d0195019501950198
019901a501a901b601b601b701ba01ba01d501df01e601ea01f202000200
0203021702250227022f0239024302430247024f025202520267026f026f
027002720276027e02a702b302b902d603130325032d03610371039903ae
03c203d403f90402042c042f043c04560467048304cf04d104d804fb051f
05450568059e05c2061b06340655066a069806af06e806fc070607500762
077c07d407ff082500ad00c700aa00b5000000000000000000000000002f
06cf01730514047802df009c0018037005870155002500060254036c038e
03d2056601f0032001da018a0369036bffa3034602f8036f015602bf0122
031f053a0366008c00ff01ab02e102f402e70415015402e90128049101b7
026f034302060000000005d30415048305e8000002d7003a027d01c002c5
03830383ffbd003a059e01df059e02d1002004e0021300df01c001870297
000000ce0269028b0058043405fb0069015a01a905780182013e0288012a
03d4049e00e5032302f301f00196007a00cd014a0424025e023901ab00cf
00fd011e00ed017100700195004001bb01dd01b8000101a803a7014c020c
018d01b0020d0137010000cd032101d4030a005900000000012602150150
02f0025503bc06d00335010100d000d2007a01030130007c000000000000
000000fe006e006600940227002b0045004d00d3013200180097004100f4
febcffe9001605d8058b009100a1032c00520030005d02cb003a009200e5
00e500580086003200ba0099008800300298007cff8001640028004d0065
000200b8016a002f010b001100170100007f00040016022200a6005f0000
00f8000a00ca0043004b01ee0077012000f401c00028045f0000008c0445
00c20060007b008b008b0064005d00c2009c009206b505d3004f01170000
0420fe9e00cc00dc005e004600e30032001a003c0091005a00a1042c0041
002000490071009c009cfe4800400040008600cb0102007d003a003e006a
0050044800290096ff6a0097006900e0004c001b00c90069ff970043ffbd
0052ff83ff8b005fffa1ff5c00670053ffa8002a0076ffb2003600870559
0256052b043400de00c901c4004800db018b00b3004800da011601250118
00ea00ea00ae0000003e05bb008a04d70053003fff8cffd5001500280022
00990062004a00e4006d00ee00e5004803c00033fe4e02b1ff4603700079
05df0051ffa7ff1f010a0068ff6c004f00bc00a5070500ab0080001e05a5
0025000040425554403f3e3d3c3b3a393837363534333231302f2e2d2c2b
2a292827262524232221201f1e1d1c1b1a1918171614131211100f0e0d0c
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b09051582320b00d
44235921212d2c20204518684420b001602045b04676688a4560442d2c01
b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01
b0172370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045
b00325456164b050515845441b2121592d2cb00143632362b0002342b00f
2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b000
8b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112b
b0172344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112b
b0172344b0177ae41b038a45186920b01723448a8a8720b0a05158b0112b
b0172344b0177ae41b21b0177ae45959182d2cb0022546608a46b040618c
482d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b0
1a23444565234520b00325606a20b009234223688a6a606120b01a8ab000
527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb11400
8a5279b31940201945208a54582321b03f1b235961442d2cb11011432343
0b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d
2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b212159
2d2c0120b003252349b04060b0206320b000525823b002253823b0022565
38008a63381b212121212159012d2c4bb06451584569b00943608a103a1b
212110592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b0
06430b2d2c3eb02a2a2d2c352d2c76b802b023701020b802b04520b00050
58b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c64
23648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb8
1555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb4
000100000015b00826b00826b00826b008260f10161345683ab001162d2c
b4000100000015b00826b00826b00826b008260f1016134568653ab00116
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2c014b
53234b515ab00225b00425b006254923451869525a58b00225b00225b005
25462345696048592121212d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c462346608a
8a462320468a608a61b8ff8062232010238ab9035803588a70456020b000
5058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b1230188
51b1400188535a58b910000020885458b202010243604259b12401885158
b920000040885458b2020202436042b12401885458b2022002436042004b
014b5258b2020802436042591bb940000080885458b202040243604259b9
4000008063b80100885458b202080243604259b94000010063b802008854
58b202100243604259b94000020063b80400885458b20240024360425959
5959592d2cb0024354584b53234b515a58381b2121591b21212121592d00
0000000100000003000028b78f335f0f3cf50819080000000000a2e31dc2
00000000b9d5b528fb74fd8c1000080e0000000900010001000000000001
00000721fe4500571000fb74fe2610000001000000000000000000000000
0000068a0639011c00000000020000000200000002aa00e4034400850400
00250400006c06aa00480639004b0171005102aa005402aa002e04000091
048300250200006e02aa005302000091023900030400004a040000f00400
002c040000530400002004000062040000580400004c0400007c04000051
023900b00239008e048300250483002504830025038d005c075e006105c7
0010055600220556004a05c7002304e3002a0473002105c7004805c70023
02aa0033031d002a05c7002204e30029071d002205c7ffe505c700480473
002205c70048055600230473008004e3003e05c7000b05c70012078d001b
05c7000f05c7001304e3001a02aa00a80239000302aa004b03c100250400
ffef02aa0076038d00490400fffb038d004604000044038d004c02aa004f
0400003d0400000d0239003c0239ff63040000110239003d063900110400
000c040000450400fff90400004402aa000d031d00640239001404000002
0400001105c7000d0400001b0400000c038d002903d7011b019a00a103d7
00b10454001405c7000e05c7000e0556004a04e3002a05c7ffe505c70048
05c7000b038d0049038d0049038d0049038d0049038d0049038d0049038d
0046038d004c038d004c038d004c038d004c0239003c0239003c0239000d
023900020400000c04000045040000450400004504000045040000450400
00020400000204000002040000020400006503330062040000810400003d
0400009c02cd007003a0fff204000023061400450614004507d7001e02aa
00ec02aa003904640019071dffe805c7004905b400350464000804640018
0464001804000002049c008603f4004005b4002b0696002e0464003e0231
00000235fffa027b001d062500470556004904000027038d005902aa00e4
0483002404640053040000020464001e04e5001a04000040040000400800
00e605c7000e05c7000e05c70048071d004b05c700430400ffee0800ffed
038d0043038d004302aa00b902aa00c10464001703f4002f0400000c05c7
00130156feab0400ffe902aa007702aa007304730019047300170400008b
0200009102aa00c1038d00430800004105c7000e04e3002a05c7001004e3
002a04e3002a02aa003302aa003202aa003202aa003205c7004805c70048
05c7004805c7000b05c7000b05c7000b0239003c02aa003c02aa001602aa
001702aa003702aa00e902aa009602aa00bb02aa004e02aa009402aa003c
04e300160239001e0473007e031d006404e3001a038d0029019a00a105c7
00230400004405c700130400000c047300240400fff904830025048300a5
02660088026600140266002c06000086060000860600002a0400002105c7
00480400003d02aa003304730080031d00640556004a038d00460556004a
038d0046040000260400ffef02aa01ef05c70010038d004905c70010038d
004905c70023052c004405c7002304e3002a038d004c04e3002a038d004c
04e300290239003d04e300290340003c04e3002902c0003605c7ffe50400
000c05c7ffe50400000c05c70048040000450556002302aa000d05560023
02aa000d04730080031d006404e3003e0239001404e3003e036b001305c7
000b0400000205c7000b0400000204e3001a038d002904e3001a038d0029
04a0002505c7004c05d900470431005703c50046035c0047045000460337
000c049e00450400ffef049500e40285000207c0002c0800004f04000099
0800004f040000990800004f040000980400009807d5016a05c700c00483
002604cd00990483002604d5022204d5010505abffe905ab027e05ab027e
05abffe905ab027e05abffe905ab027e05abffe905abffe905abffe905ab
ffe905abffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe9
05abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
027e05ab01c005ab01c005abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905ab02d605ab006605abffea05d5ffff
04d500920800000007eb013007eb012007eb013007eb012004d500b204d5
008004d5002a082b0198086b01b807550010060000f40600006f0440003a
0540003704c0003f04150040040000250600005505ab002f046b003b04d5
000301c00089035500a206ab003403d5006404d5009202d6008302d60083
04d500b202d6007005c70010038d00490556004a038d00460556004a038d
004604e3002a038d004c04e3002a038d004c04e3002a038d004c05c70048
0400003d05c700480400003d05c700480400003d05c700230400000d05c7
00230400000d02aa00160239ffde02aa00170239ffdf02aa00330239fffe
02aa003302390039031d002a0239ff6305c70022040000110400001104e3
00290239003d05c7ffe50400000c059d002603f5000c05c7004804000045
05c70048040000450556002302aa000d04730080031d006404e3003b0239
001005c7000b0400000205c7000b0400000205c7000b0400000205c7000e
04000002078d001b05c7000d05c700130400000c0239001605c7000f038d
0049071dffe80556004905c7004904000027023900b2078d001b05c7000d
078d001b05c7000d078d001b05c7000d05c700130400000c02aa00b802aa
ffdb0400003d04cd005a060000860600002a060000310600002502aa00c3
02aa00bb02aa00ec02aaffea05c70010058dff5c0677ff5c034aff5c05c7
ffb60687ff5c05f2ffb30227ffb105c70010055600220525003204e3002a
04e3001a05c7002302aa003305c7002205cd001c071d002205c7ffe50525
004f05c7004805c700250473002204a8002004e3003e05c7001305c7000f
05e7001805f2003c02aa003205c7001304310057035c0047042f000b0227
002503f6fffa0412006e0389000003500046042f000b03d5005102270025
0408001503e10019044a0074039effd3039100460400004503fe0059032b
004603f6fffa038d00180502001c0544004b0227000003f6fffa04000045
03f6fffa0544004b04e3002a0604003704a000250548004b0473008002aa
003302aa0032031d002a06fa000d06fa002705ee00360556002505aa001a
05c7002505c70010049800240556002204a000250575001a04e3002a072b
00120402002b05c7002505c7002505560025056d0012071d002205c70023
05c7004805c70025047300220556004a04e3003e05aa001a0652004c05c7
000f05c700250533fffa081200390812003905a6003606fa002504980024
0548003a083900260556ffee038d00490412004e03c700300348001f0412
001a038d004c05870017032900180448002e0448002e03e3002e03fe000c
0510002e0448002e040000450448002e0400fff9038d0046037f000c0400
000c052f00570400001b0448002e0406001e0629002e0629002e0423000c
0560002d03a6002e036f001b05fa002d03aeffff038d004c03dd00110348
001f036f0046031d00640239003c023900020239ff6305d1000c05c9002d
0400000d03e3002e0400000c0448002e039a002502cf001f0800004107a2
0010040a000d02aa010102aa001c02aa003202aa001202aa010202aa008f
02aa008f02aa008f02aa009002aa010202aa001c02aa010202aa012102d9
005602aa008f025400e002be02af02beff6b023900b003da005f03a40033
02af0021035a004303c5004e023b0043024a004e03d0005803ce00430222
0043039e0043037600330374000f040f006403e2004e0232004302700021
03cd005f03a2004303a200430386005803dc004303ae003d03ca006903c0
004304e200430400002104750043045d00430444004301ac006b02f9006b
06360096023bff9d039e0043039e00430374ff5b0374ff5b03a2003304e2
004304e2004304e2004304e2004303da005f03da005f03da005f03a40033
02af0021035a004303c5004e023b00430279000c03ce004302220043039e
0043037600330374000f03e2004e0270002103cd005f03a2004303860058
03ae003d03ca006903c0004304e2004304000021023b004303a400330376
0033038600580404000f0000ffdc0000ff250000ffdc0000fe51028d00ab
028d00a002da0043034d007901a8ffba019c004601e50046019c0046019c
004601ad0048019c004601b10046015100460435017c0435012e043500b7
043500810435012c043500be043500af043500810435009a043500db0435
0085028d00c1043500b3060001000600010002420036060001000435009e
04350098043500cb060001000600010006000100060001000600010001b1
004606000100060001000600010006000100060001000600010006000100
06000100051bffba06000100060001000600010005b5003a05b5003a01f4
ffba01f4ffba060001000600010006000100060001000481003604350036
043dffba043dffba03e9004a03e9004a067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba051b003204b5002406000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
01cf003001b1004601b1004601b1004001b1004606000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000400001b080000000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100028d007f028d005d0600010004ee0015034d007901a8000e01d6ffdc
01a8005601d60010037500320375003201a8002d01d60013051b003204b5
002401f4ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba
01f4ffba024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba0481003604350036043dffba043dffba
0481003604350036043dffba043dffba0481003604350036043dffba043d
ffba02b3005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a
03e9004a0692003e0692003e043fffba043fffba0692003e0692003e043f
ffba043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e
06c5ffba06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7
ffba04a7ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a
039a00360435ffba0327ffba064f0027064f00270224ffba021affba04a7
004604a700460224ffba021affba04cf002d04cf002d0327ffba0327ffba
040d0047040d004701a8ffba01a8ffba02b4002302b400230327ffba0327
ffba043500450435004501f4ffba01f4ffba024200360300fff7039affba
0327ffba0375003203750032051b003204b50024051b003204b5002401f4
ffba01f4ffba045a004004ce0040045a002604ce0030045a005304ce0041
045a005304ce00410600010006000100019c0046019c0046060001000600
0100060001000151004601b10046060001000600010001ad004801e50046
06000100060001000600010001b1004601b1004601b1004601b1004601b1
004001cf003006000100019c0046019c0046060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100028d00ca028d
00c7028d00c6060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000100ffba0800ffba1000ffba05c70048043b
00450635000b045600020000fdcc0000fc140000fd130000fe420000fce0
0000fdd40000fe620000fe2b0000fdb70000fc980000fd880000fc080000
fcfe0000feff0000ff030000fe9e041a00a206000088060000140000fe70
0000fdd40000fdf60000fd770000fe620000fdbb0000fbd80000fbd80000
fb740000fcfe0000fc8c0000fc460000fd270000fcb40000fca80000fcae
0000fc440000fe140000fe700000fd910000fc710000fdc30000fe470000
fe620000fcc30000fde10000fd870000fd4b0000fd970000fd4b0000fc8a
0000fc620000fc090000fbd70239003c05c70010038d004905c70010038d
004905c70010038d004905c70010038d004905c70010038d004905c70010
038d004905c70010038d004905c70010038d004905c70010038d004905c7
0010038d004905c70010038d004905c70010038d004904e3002a038d004c
04e3002a038d004c04e3002a038d004c04e3002a038d004c04e3002a038d
004c04e3002a038d004c04e3002a038d004c04e3002a038d004c02aa0033
0239003c02aa00330239003c05c700480400004505c700480400004505c7
00480400004505c700480400004505c700480400004505c7004804000045
05c700480400004505c70048043b004505c70048043b004505c70048043b
004505c70048043b004505c70048043b004505c7000b0400000205c7000b
040000020635000b045600020635000b045600020635000b045600020635
000b045600020635000b0456000205c700130400000c05c700130400000c
05c700130400000c05c70010038d004902aa00330239000605c700480400
004505c7000b0400000205c7000b0400000205c7000b0400000205c7000b
0400000205c7000b040000020000ff090000ff090000ff090000ff0904a0
00230348001f072b0012058700170556002503e3002e0556002503e3002e
05c700230448002e05c700130400000205c700130400000205c7000f0400
001b0533fffa0406001e053300250400000d05c7002b038d004c05c70048
0400004505b5003a01f4ffba0224ffba021affba04a7004601f4009e01f4
001001f4001b01f4001001f4006b01f4fff90227ffce01a8000f01a8fff5
02aa00a402aa00a401a8000e01a8005601a800560000ffcf01a8000f01d6
ffbf01a8fff501d6ffcd01a8001d01d6fff501a8009301d6001303750032
037500320375003203750032051b003204b5002405b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
0481003604350036043dffba043dffba0481003604350036043dffba043d
ffba0481003604350036043dffba043dffba02b3003202b3003202b3005f
02b3005f02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3
005f02b3005f02b3005f02b3005f02b3003802b3003802b3004902b30049
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a0692003e0692003e043fffba043fffba0692003e0692003e043f
ffba043fffba0692003e0692003e043fffba043fffba08c9003e08c9003e
06c5ffba06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7
ffba045a002a039a00360435ffba0327ffba064f0027064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba064f0027064f
00270224ffba021affba064f0027064f00270224ffba021affba064f0027
064f00270224ffba021affba04a7004604a7004604a7004604a70046067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
04cf002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327
ffba04cf002d04cf002d0327ffba0327ffba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba067f0014077600140327
ffba041effba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba040d0047040d004701a8ffba01a8ffba040d0047040d
004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047
040d004701a8ffba01a8ffba043500450435004501f4ffba01f4ffba0435
0045043500450435004504350045043500450435004501f4ffba01f4ffba
04350045043500450481003604350036043dffba043dffba024200360300
fff7031a001a031a001a031a001a03750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
003203750032037500320375003203750032051bffba04b5ffba051b0032
04b5002401f4ffba01f4ffba0375003203750032051b003204b5002401f4
ffba01f4ffba051b003204b50024067f0045067f0045067f0045067f0045
01a800280000fe290000fea20000ff300000ff1d0000ff120000ff920000
fe7e08fc003208ad00320000ffb50000ffb60000feed0000ff640000fe7e
0000ff9f018d000002f6fffd0000fe820000ff1004cd00320000ff580000
ff580000ff640692003e0692003e043fffba043fffba08c9003e08c9003e
06c5ffba06c5ffba045a002a039a00360435ffba0327ffba034d007902b4
00230242003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b1
01f4006d067f001407760014022200430000fee702bc000004440043045a
fff504cefff5045a005304ce0041045a005304ce0041045a005304ce0041
045a005304ce0041045a005304ce0041045a005304ce0041043500710435
00ad045a000f04ce000f0000000000000076000000760000007600000076
000000760000007600000076000000760000007600000076000000760000
00fa0000017c0000017c0000017c0000017c0000017c0000017c0000017c
000002ae0000039200000562000007400000074000000740000007400000
074000000740000007400000074000000740000007400000074000000740
000007400000074000000740000007400000074000000740000007400000
074000000740000007400000074000000740000007400000074000000740
00000740000007400000093a0000093a00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00000bda00000bda0000
0bda00000bda00000bda00000bda00000bda00000bda00000bda00000bda
00000bda00000bda00000bda00000bda00000bda00010000068a00f2003c
0076000700020010002f0056000005ca0f13000300020000000f00ba0000
00030000000000fe0000000000030000000700d800fe0001000000000000
007f01d600010000000000030018025500010000000000040018026d0001
000000000006001802850001000000000007006c029d0003000104090000
00fe03090003000104090001003004070003000104090002000e04370003
000104090003003004450003000104090004003004750003000104090006
003004a5000300010409000700d804d5000300010f000007006605ad0054
0079007000650066006100630065002000a900200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200070006c0063002e002000440061007400610020
00a900200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e00200070006c0063
002f005400790070006500200053006f006c007500740069006f006e0073
00200049006e0063002e00200031003900390030002d0031003900390032
002e00200041006c006c0020005200690067006800740073002000520065
00730065007200760065006400540069006d006500730020004e00650077
00200052006f006d0061006e00ae002000540072006100640065006d0061
0072006b0020006f006600200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
00200070006c006300200072006500670069007300740065007200650064
00200069006e002000740068006500200055005300200050006100740020
002600200054004d0020004f00660066002e00200061006e006400200065
006c0073006500770068006500720065002e547970656661636520a92054
6865204d6f6e6f7479706520436f72706f726174696f6e20706c632e2044
61746120a920546865204d6f6e6f7479706520436f72706f726174696f6e
20706c632f5479706520536f6c7574696f6e7320496e632e20313939302d
313939322e20416c6c20526967687473205265736572766564414c414c43
422b54696d65734e6577526f6d616e50534d54414c414c43422b54696d65
734e6577526f6d616e50534d54414c414c43422b54696d65734e6577526f
6d616e50534d5454696d6573204e657720526f6d616ea82054726164656d
61726b206f6620546865204d6f6e6f7479706520436f72706f726174696f
6e20706c63207265676973746572656420696e2074686520555320506174
202620544d204f66662e20616e6420656c736577686572652e0054007900
7000650066006100630065002000a900200054006800650020004d006f00
6e006f007400790070006500200043006f00720070006f00720061007400
69006f006e00200070006c0063002e00200044006100740061002000a900
200054006800650020004d006f006e006f00740079007000650020004300
6f00720070006f0072006100740069006f006e00200070006c0063002f00
5400790070006500200053006f006c007500740069006f006e0073002000
49006e0063002e00200031003900390030002d0031003900390032002e00
200041006c006c0020005200690067006800740073002000520065007300
6500720076006500640041004c0041004c00430042002b00540069006d00
650073004e006500770052006f006d0061006e00500053004d0054005200
6500670075006c006100720041004c0041004c00430042002b0054006900
6d00650073004e006500770052006f006d0061006e00500053004d005400
41004c0041004c00430042002b00540069006d00650073004e0065007700
52006f006d0061006e00500053004d00540041004c0041004c0043004200
2b00540069006d00650073004e006500770052006f006d0061006e005000
53004d005400540069006d006500730020004e0065007700200052006f00
6d0061006e00ae002000540072006100640065006d00610072006b002000
6f006600200054006800650020004d006f006e006f007400790070006500
200043006f00720070006f0072006100740069006f006e00200070006c00
630020007200650067006900730074006500720065006400200069006e00
200074006800650020005500530020005000610074002000260020005400
4d0020004f00660066002e00200061006e006400200065006c0073006500
770068006500720065002e00490061006e00500020005300750073006100
6e004c0020004700570061006400650020004d0069006b00650044007500
200047007200650067004800200045006c0069004b002000500050006100
74006800650020002600200052006f0062004e006f002e000000ba0054ff
c003e1b345453240b803e1b32b2e3240b803e1b2282932b9ffc003e1b21a
1c32bd03e102ac0027001fffc003dfb2161b32b9ffc003deb2424232b9ff
c003deb2363832b9ffc003deb32a2d32df410a03de00ef03de000203de03
df0028001fffc003dfb3282e32f0410d03df0001037e000f0101001f00a0
03dd00b003dd0002004003dab32426329fbf03cc000103ca03c90064001f
ffc003c9b20d1132410a03c703b70012001f03b603b50064001fffc003b5
b30e1132004173038d000100c0038d00d0038d00e0038d00f0038d000400
6f03a7007f03a7008f03a700af03a70004000f03a7001f03a7002f03a700
4f03a7000403ab03ab00ef03a50001000f03a5002f03a5006f03a5008f03
a50004005403aa0001006b03aa000103a8036a0022001f038c0394001500
1f038b03930015001f03a40393001a001f03a20394001e001f03a1039300
1e001f039f0394001e001f039b0394001a001f039a0393001e001f039903
940016001f039803940016001f03970393001b001f03960394001b001f03
950393001b001f03760375001a001f03740375001a001f03a00373b21e1f
10411e039300200393003003930003002003940030039400400394000300
00039400010383036c001e001f03b1036c0032001f036d036c0032001fff
c0037db2212332b9ffc0037db3171932a0410a037d00b0037d00c0037d00
d0037d0004ffc0037cb2212332b9ffc0037cb3171932a0412d037c00b003
7c00c0037c00d0037c000400300373004003730002000003730010037300
200373000300e0037300f00373000200b0037300c0037300d00373000300
8403730090037300a0037300030377036a0029001f0389036ab2281f40b8
0367b33940323fbb0366000100400366b3191d328fbb0366000100400366
b3090a3240b80366b3090e3240b80366b3090f323fbb0365000100400365
b3090c3240b80365b31a1d3240b80365b3090e326b410e0363007b036300
020014036300240363003403630044036300040363b2242f1fba034e006d
0800400e1f7f027f037f047f050430440112bf033200500800001f001203
2d003c080040291f5f3c0137600970098009031009200930094009500905
6f037f038f03031f032f033f034f035f0305b8ffc0b2073a33b8ffc04047
063a33900ba00bb00bc00bd00b05b006c006d006e006f006052006300640
0650066006700680069006a006099006900702600b700b800b03100b200b
300b400b500b051f0701a041850362000100000362001003620070036200
900362000400f0035f00010020035e0020035f0030035f0040035e000400
00035e0000035f0010035f00d0035e00e0035f00050010030f0020030f00
30030f00d0030f00e0030f00050000030f0010030f0050030f0060030f00
70030f00d0030f00060000030f0010030f0020030f0030030f00e0030f00
f0030f0006030f00270000030e0030030e000200e0030e00f0030e000203
0e004a00e0030d00f0030d0002030d002700d002fc0001001002fc002002
fc005002fc000300d002fc00e002fc0002000002fc001002fc002002fc00
3002fc005002fc006002fc000600e002fc00f002fc0002002002fc003002
fc004002fc000302fc406127c02901b02901a02901902901403c3f413240
223f41321212125f235f255f285fa5046f236f256f286fa5044f234f254f
284fa5043f233f253f283fa5042f232f252f282fa5041f231f251f281fa5
048f4caf4cbf4ccf4c045f4c6f4c7f4c0337b8ffc0b3b22b3032b8ffc0b3
b2222532b8ffc0b5b2191a32370f413b02af0001005f02af009f02af00df
02af0003001f02af002f02af003f02af006f02af000402af02af001f02ad
002f02ad003f02ad004f02ad005f02ad000500df02ad0001000f02ad001f
02ad003f02ad005f02ad009f02ad0005005f02ad00df02ad0002000f02ad
001f02ad003f02ad0003004002acb23a334f414a02ac005f02ac009f02ac
0003002f02ac003f02ac0002000f02ac003f02ac00af02ac000300b002ac
00e002ac0002004f02ac005f02ac00a002ac0003001f02ac002f02ac003f
02ac0003000f035a0001000f035a001f035a003f035a005f035a0070035a
000500cf035700df03570002000f0357001f03570070035700af03570004
035a035a0357035702ad02ad02ac02ac032c400d31151f00161600000012
1108104110020c004a000d01a8004a000d0198004a000d0189004a000d01
3f004a000d0124400e4a0df64a0dbe4a0d864a0d274a0dbe02280041000d
01940041000d0121400b410db4410d4f410d29410d411002170021000d02
150021000d02060021000d01eb0021000d014e0021000d012c4014210df9
210df3210df1210d9d210d71210d3d210d4110021c001f000d0214001f00
0d020b001f000d0196001f000d014a001f000d0126400b1f0dc61f0d571f
0d371f0d410d019e0141000d00420141000d001e0141000d001b0141000d
01f2b40f440f0009bb01f20044000d0201b23c291fb80200b23c291fb801
ffb23c411fb801feb23c471fb801fdb23c9e1fb801fab23c931fbc01f901
0f0101001f01f6b224e41f411501f401490401001f01f301490401001f01
f1014900ab001f01f001490067001f01a6003c0125001f01a4b23c811f41
1501a3010f019a001f01a200220801001f01a100500401001f019f014901
9a001f019d01490067001f019cb22c621fb8019bb22c791fbc019a002c01
01001f0197b22ce41fb80193b22c891fb80192b22c6c1fb8018fb2259e1f
b8016ab23c2a1f4111016700240201001f0163002502ab001f014c010f01
9a001f01480149006c001f0147b22c891fb80145b22c9e1fb80144b22c79
1fb80143b223311fb80127b23c811fbc012300500101001f011fb223e41f
4115011d0023019a001f011c00230801001f011b00250801001f010e010f
0401001f010d00220401001f0108b223811fb80106b425e41ff73cbb0125
001f00f5010fb29e1fe3bc01490156001f00e20149b2ab1fd1b901490401
b21fcf2cb80125b61fce23bb1fc524b80156b21fc02cb80801b21fbf2cb8
0201b51fb124e41fb0b901490201b61faf2c671fad23b80801b21fa523b8
0201400b1f9f3c2d1f9b235a1f9925b80201b21f812cbc0401001f006d01
0f0156400b1f592c3e1f4c3cab1f4625b80101b21f403cb80125400a1f3a
23721f393cab1f38b80149b3ab1f3124b80401b21f3025b802abb61f2a24
e41f2623b80156b21f5537ba023500070175402c0774076207560751073b
0733072d0720071d071c071408120810080e080c080a0808080608040802
08000814b8ffe0402b000001001406100000010006040000010004100000
01001002000001000200000001000002010802004a00b013034b024b5342
01b0124b004b5442b0372b4bb807ff52b0382b4bb008505b58b101018e59
b0382bb00288b801005458b801ffb101018e851bb0124358b90001012f85
8d1bb90001017c858d5959014bb0c063004b6220b0f65323b8010a515ab0
052342180016763f183f123e113946443e113946443e113946443e113946
443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b
2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d594bb0
4753205c58b90271026f4544b90270026f45445958b9017a0271455258b9
0271017a4459594bb04753205c58b9002202704544b9003c027045445958
b901b30022455258b9002201b34459594bb04c53205c58b9014900224544
b1222245445958b901c20149455258b9014901c24459594bb06753205c58
b9002402714544b90050027145445958b9021e0024455258b90024021e44
59594bb8020153205c58b9010f00224544b1222245445958b90c00010f45
5258b9010f0c004459594bb01c53205c58b125254544b12c2545445958b1
3725455258b125374459594bb0ab53205c58b125254544b1232545445958
b901590025455258b9002501594459594bb8010153205c58b125254544b1
282545445958b902080025455258b9002502084459592b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b361dc6463
456523456023456560234560b08b766818b080622020b164dc4565234520
b003266062636820b003266165b0dc236544b064234420b1616345652345
20b003266062636820b003266165b063236544b0612344b10063455458b1
63406544b26140614523614459b3a67f434b456523456023456560234560
b089766818b080622020b1437f4565234520b003266062636820b0032661
65b07f236544b043234420b1a64b4565234520b003266062636820b00326
6165b04b236544b0a62344b1004b455458b14b406544b2a640a645236144
594b5242014b5058b108004259435c58b108004259b3020b0a124358601b
2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342
b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f23
42b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b
0018456944456944456944456944737373747373737475752b7373747475
184569447373742b4bb021534bb046515a58b03cb03c45b040604459012b
2b2b2b757575757575757543584010bf3ccf3c026f3c7f3c8f3c9f3caf3c
0575755943584012bf22cf22025f226f227f228f229f22af220675755943
5c58b6403c9f22ef220375592b2b01747474744544737374747575454473
454473744544737475737373737300757575737575752b2b757575752b75
2b435841220063032d00010003032d0013032d0023032d0033032d005303
2d000500c3032d00d3032d00e3032d00f3032d00040083032d0093032d00
a3032d00b3032d0004032d032d4518694474747575592b4358b900180332
b330353238b80332b361663238b80332b3535a3238b80332b3454e3238b8
0332b33c413218b80332b23f330a410f0332000100ba033200ca033200da
033200ea033200fa03320005033203324518694474752b2b2b2b2b2b5973
00732b012b7575002b2b2b74002b2b2b732b74012b002b2b017373737474
732b2b00732b2b002b2b2b017374732b012b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b00017375007373004569440073730173742b2b2b2b2b732b0073
2b752b2b732b2b2b2b2b2b2b2b2b2b0000>
[3035 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
end
%ADOEndSubsetFont
[/N18/ALALCB+TimesNewRomanPSMT 1 TZ
220.799332 327.598999 185.999435 188.399414 re
W
n
n
402.779999 445.5 m
402.779999 450.47998 398.759979 454.5 393.779999 454.5 c
380.279999 454.5 l
375.300018 454.5 371.279999 450.47998 371.279999 445.5 c
371.279999 400.5 l
371.279999 395.579987 375.300018 391.5 380.279999 391.5 c
393.779999 391.5 l
398.759979 391.5 402.779999 395.579987 402.779999 400.5 c
402.779999 445.5 l
0.92941 0.80392 0.79608 setrgbcolor
eofill
1 J
1 j
0.24 w
n
402.779999 445.5 m
402.779999 450.47998 398.759979 454.5 393.779999 454.5 c
380.279999 454.5 l
375.300018 454.5 371.279999 450.47998 371.279999 445.5 c
371.279999 400.5 l
371.279999 395.579987 375.300018 391.5 380.279999 391.5 c
393.779999 391.5 l
398.759979 391.5 402.779999 395.579987 402.779999 400.5 c
402.779999 445.5 l
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
395.759979 395.519989 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 1886 86 <0001ffedffe802e70389003000b7402432010117221b103f080b040f180b
150f3a2705280b230f9903032f013f014f015f010401b80104400a2ec600
30070524290719b801b5403415c618170b1d24110b028a00c60140120b3f
50010101c90e3ad020e020f020037f208f209f20c0200420a0083a26951a
8a19c618b8ffc040133435184030351840212234a018c01802187c31ba01
44016400182b10f55d2b2b2bf4edf4edf45d5dfdf45d2be4ed003fed3f3c
e4ed3fed3f3ce4ed5d3130015d5d2b005d01032326262322061514161716
161514062322272623220723133316163332363534272e02353436333217
161633323702e73d2505684d3e491d31824cad84485e21122d17253d2506
72634c59101cb3338d6f201a0e67112b1d0389fecd867a4430213c368e90
4068a1220c2e0144987e553e28223cd46a3561860503272f>ALAKLK+TimesNewRomanPS-ItalicMT AddT42Char 
1 0 0 <0002010000000500050000030007003fb40201f80607b802664013000504
f803000a0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c
4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121010004
00fc2003c0fc400500fb002004c0>ALAKLK+TimesNewRomanPS-ItalicMT AddT42Char 
ALAKLK+TimesNewRomanPS-ItalicMT /CharStrings get begin
/s 86 def
end
ALAKLK+TimesNewRomanPS-ItalicMT /Encoding get
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 10.020004 -10.020004 0.0 0.0 0.0] Tf
(s) show
397.200012 399.419983 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 2210 87 <00010057ffe802660481001e0106b90005ffde40710f390f400f39a405ef
02fb0e03551b8a00f60103241d3a005b0e030f201d20027f20ef20021e00
0e0f0104050707001d1c1e1b011a1c1d1e18051904010800161a19190404
039300a0020106130b0007071f161914161619161f2819161002490f031f
0302ff0301036c2000af070f8a0eba010100070203400c121640363934c0
16d0160216b8013b400a1f091617161f0a774c182b2b103c2b2b10f65d2b
435c58400f164028143f16401c113f16401e123f2b2b2b5901fdf6ed10e4
10f45d71e42b103c2b10c0870e2e2b057d10c400183f3f3ce4fd3c103c10
3c011112173900111239113939870e7d10c4053c3c0110c910c93130015d
715d5d5d2b2b010333072303061514163332373637170607062322263534
3713233736363702174e9d119cac1c100b19291853215c5238392c3820a7
970a6e925a0481fef03ffdb25f1c111223146719863726372b366f024327
1e779300>ALAKLK+TimesNewRomanPS-ItalicMT AddT42Char 
ALAKLK+TimesNewRomanPS-ItalicMT /CharStrings get begin
/t 87 def
end
ALAKLK+TimesNewRomanPS-ItalicMT /Encoding get
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 6.479996 -6.479996 0.0 0.0 0.0] Tf
(t) show
n
256.5 445.5 m
256.5 450.47998 252.479996 454.5 247.5 454.5 c
234.0 454.5 l
229.080002 454.5 225.0 450.47998 225.0 445.5 c
225.0 400.5 l
225.0 395.579987 229.080002 391.5 234.0 391.5 c
247.5 391.5 l
252.479996 391.5 256.5 395.579987 256.5 400.5 c
256.5 445.5 l
0.92941 0.80392 0.79608 setrgbcolor
eofill
n
256.5 445.5 m
256.5 450.47998 252.479996 454.5 247.5 454.5 c
234.0 454.5 l
229.080002 454.5 225.0 450.47998 225.0 445.5 c
225.0 400.5 l
225.0 395.579987 229.080002 391.5 234.0 391.5 c
247.5 391.5 l
252.479996 391.5 256.5 395.579987 256.5 400.5 c
256.5 445.5 l
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
238.019989 395.519989 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 10.020004 -10.020004 0.0 0.0 0.0] Tf
(s) show
239.459991 399.419983 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 492 76 <00020058ffe8022e0516000b002901244027176e3a3516763a35122b4012
352b40191b34590c0119230116172945215a282830294d0c007006b8039c
401a0c07280c0f0c290f1f1e21141e1e211b0b1e2a28211e10178a16b801
43b40f0970030cb80147b203600fb80123b7296c121e401b351eb8ffc0b3
3a3b341eb8ffc0b32a34341eb8ffc040092324341e401f20341eb8ffc040
13131634301e8f1e021e192a1e171e2a0a7786182b2b103c2b4e10f45d2b
2b2b2b2b2b435c58400b1e401c113f1e400d113f1eb8ffc0b3160d3f1eb8
ffc0b117392b2b2b2b594de4fde4e610ed10f6ed2b103c2b10c0003f870e
2e2b087d10c42b183f00f6ed10f5ed2bfc01f510c9313001715d2b2b435c
58b517400c143f0db8ffdeb61339172213390db8ffdeb50f3917400f392b
2b2b2b2b59012b2b01321615140623222635343613030615141633323736
371706070623222635343713363534262322073501ca2a3a3b29293b3a37
c614130d0f15393a23445c443e29341982201f1b164505163a2a293b3b29
2a3afe73fd43470e1014102d53176847353125255601c06e1c161c0b2700
>ALAKLK+TimesNewRomanPS-ItalicMT AddT42Char 
ALAKLK+TimesNewRomanPS-ItalicMT /CharStrings get begin
/i 76 def
end
ALAKLK+TimesNewRomanPS-ItalicMT /Encoding get
dup 105 /i put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 6.479996 -6.479996 0.0 0.0 0.0] Tf
(i) show
n
301.5 473.100006 m
301.5 478.079987 297.47998 482.100006 292.5 482.100006 c
279.0 482.100006 l
274.079987 482.100006 270.0 478.079987 270.0 473.100006 c
270.0 374.100006 l
270.0 369.119995 274.079987 365.100006 279.0 365.100006 c
292.5 365.100006 l
297.47998 365.100006 301.5 369.119995 301.5 374.100006 c
301.5 473.100006 l
0.92941 0.80392 0.79608 setrgbcolor
eofill
n
301.5 473.100006 m
301.5 478.079987 297.47998 482.100006 292.5 482.100006 c
279.0 482.100006 l
274.079987 482.100006 270.0 478.079987 270.0 473.100006 c
270.0 374.100006 l
270.0 369.119995 274.079987 365.100006 279.0 365.100006 c
292.5 365.100006 l
297.47998 365.100006 301.5 369.119995 301.5 374.100006 c
301.5 473.100006 l
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
288.779999 419.039978 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 10.020004 -10.020004 0.0 0.0 0.0] Tf
(s) show
290.160004 422.940002 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 912 83 <0002ff1efe4a03c80389002300320153404b55018d0c9d0cad0cbc0d0539
154b00460e4615482a5506650e750e791aac28b908bc29b92ac91a0e4322
5000560e0330003422400003010d2431320e0e00161a173016150e143015
23451bb801a7400e282230234d0024012f2601001b2fb8038d4022040400
0728000e00230e1f1a1b141a1a1b26240a0b16150e0f1a011a33281b1a10
2cba03810007ffc0b22e3507b8ffc0b2293507b8ffc0b2273507b8ffc040
15203507401f354f0701400750077007a007c0070507ba033b0000032bb4
1b2323b81ab8ffc0b732351a401e123f1ab8ffc040121c351a401b1d34ef
1a011b19331a171a330ab8033ab156182b2b103c2b10f45d2b2b2b2b7ae8
182f10edfd5d712b2b2b2b2be92b103c2b10c071003f3c3fed870e2e2b08
7d10c42b183f003c10ed01111239001112393910f5ed2bfc01f50010ed01
10c00010ed0110c0870e103c3c3c3c7dc43130015d5d5d005d0107363633
321615140023222627030615141616330721373636371336353426232207
35131633323e033534262322060701c5456dab59597efe9aee324d304916
17344d09fe290a5d4124fd171f201d346e3e69346c67524149316cd33103
89e680668d71dcfe39161cfefe4c17161f11252504387f036c53141b1e07
27fd134a3a7295ca635055f8a600>ALAKLK+TimesNewRomanPS-ItalicMT AddT42Char 
ALAKLK+TimesNewRomanPS-ItalicMT /CharStrings get begin
/p 83 def
end
ALAKLK+TimesNewRomanPS-ItalicMT /Encoding get
dup 112 /p put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 6.479996 -6.479996 0.0 0.0 0.0] Tf
(p) show
n
356.100006 486.600006 m
356.100006 491.579987 352.079987 495.600006 347.100006 495.600006 c
333.600006 495.600006 l
328.619995 495.600006 324.600006 491.579987 324.600006 486.600006 c
324.600006 360.600006 l
324.600006 355.619995 328.619995 351.600006 333.600006 351.600006 c
347.100006 351.600006 l
352.079987 351.600006 356.100006 355.619995 356.100006 360.600006 c
356.100006 486.600006 l
0.92941 0.80392 0.79608 setrgbcolor
eofill
n
356.100006 486.600006 m
356.100006 491.579987 352.079987 495.600006 347.100006 495.600006 c
333.600006 495.600006 l
328.619995 495.600006 324.600006 491.579987 324.600006 486.600006 c
324.600006 360.600006 l
324.600006 355.619995 328.619995 351.600006 333.600006 351.600006 c
347.100006 351.600006 l
352.079987 351.600006 356.100006 355.619995 356.100006 360.600006 c
356.100006 486.600006 l
h
0.0 0.0 0.0  setrgbcolor
S
0.0 sg
343.320007 398.039978 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 10.020004 -10.020004 0.0 0.0 0.0] Tf
(s) show
344.759979 401.940002 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 104 70 <0001003cffe8036c03890028010d40460040170e3f2840170e3f2e002c01
2b272e283e003e013a053e273e288c028b218927ab02a424b51fb324101f
001a021a0419051a271f28068526017a278a27a621031605012ab8ffc0b2
11352ab8ffc0b216352ab8ffc0400e23359f28af2802280000280d1911b8
0104b41d240a0725b8ffdeb31b103f25b8ffdc40221e392527030b00c914
7019270d8053352f0d3f0d4f0d5f0d040f0d1f0d020d1a2a22b80381401e
068053353f064f065f066f06048006a006b006c006d006050619292b5618
2b4e10f45d712b4de94e10fe5d712b4dedede4003fed2b2b3feded011112
393910c95d3130012b2b2b715d004bb021534bb02e515a58bb001fffe800
1effe8383859007101715d2b2b2506062322263534122433321615140706
23222635343e0235342726232206070615141633323637031b68d4768e9f
ab01218b6d6c261c291f290f2f0a131d3562c0445274644d975eda7d75a0
87990128b95b423e2c22281e13202d140b150e148a7f9a9a66774d65>ALAKLK+TimesNewRomanPS-ItalicMT AddT42Char 
ALAKLK+TimesNewRomanPS-ItalicMT /CharStrings get begin
/c 70 def
end
ALAKLK+TimesNewRomanPS-ItalicMT /Encoding get
dup 99 /c put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 6.479996 -6.479996 0.0 0.0 0.0] Tf
(c) show
0.48 w
n
272.040009 382.259979 m
260.700012 378.539978 247.319992 382.5 240.779999 391.5 c
0.0 0.0 0.0 setrgbcolor
S
n
274.73999 383.339996 m
271.859985 380.160004 l
271.97998 381.47998 271.440002 382.859985 270.47998 383.759979 c
274.73999 383.339996 l
eofill
n
240.779999 454.5 m
247.73999 463.73999 261.059998 468.359985 271.97998 465.300018 c
S
n
274.73999 464.339996 m
270.47998 463.800018 l
271.440002 464.759979 271.919983 466.079987 271.73999 467.459991 c
274.73999 464.339996 l
eofill
n
286.559998 450.839996 m
280.019989 450.839996 274.73999 456.899994 274.73999 464.339996 c
274.73999 471.839996 280.019989 477.839996 286.559998 477.839996 c
293.100006 477.839996 298.380005 471.839996 298.380005 464.339996 c
298.380005 456.899994 293.100006 450.839996 286.559998 450.839996 c
1.0 1.0 1.0  setrgbcolor
eofill
n
286.679993 450.600006 m
286.559998 450.600006 l
285.959991 450.660004 l
285.300018 450.660004 l
284.700012 450.779999 l
284.100006 450.899994 l
283.559998 451.019989 l
283.320007 451.139984 l
283.139984 451.440002 l
283.440002 451.559998 l
283.679993 451.5 l
284.759979 451.259979 l
285.359985 451.139984 l
285.959991 451.139984 l
286.559998 451.079987 l
286.679993 451.079987 l
286.919983 450.839996 l
286.679993 450.600006 l
h
281.040009 452.100006 m
280.800018 452.279999 l
280.320007 452.579987 l
279.779999 453.0 l
279.359985 453.359985 l
278.880005 453.779999 l
278.399994 454.259979 l
278.399994 454.619995 l
278.759979 454.559998 l
279.179993 454.139984 l
279.660004 453.720001 l
280.079987 453.359985 l
280.559998 453.0 l
281.040009 452.700012 l
281.279999 452.519989 l
281.399994 452.220001 l
281.040009 452.100006 l
h
276.899994 456.179993 m
276.540009 456.660004 l
276.23999 457.259979 l
275.940002 457.800018 l
275.700012 458.399994 l
275.459991 459.0 l
275.399994 459.23999 l
275.519989 459.539978 l
275.820007 459.359985 l
275.880005 459.179993 l
276.119995 458.579987 l
276.359985 458.039978 l
276.959991 456.959991 l
277.320007 456.419983 l
277.200012 456.119995 l
276.899994 456.179993 l
h
274.73999 461.579987 m
274.619995 462.23999 l
274.559998 462.959991 l
274.5 463.619995 l
274.5 465.0 l
274.73999 465.179993 l
274.97998 464.940002 l
274.97998 463.679993 l
275.040009 463.019989 l
275.100006 462.359985 l
275.220001 461.700012 l
275.220001 461.639984 l
275.040009 461.399994 l
274.73999 461.579987 l
h
274.800018 467.399994 m
274.859985 467.759979 l
275.220001 469.079987 l
275.459991 469.679993 l
275.700012 470.279999 l
275.820007 470.639984 l
276.179993 470.759979 l
276.300018 470.459991 l
276.119995 470.100006 l
275.880005 469.559998 l
275.700012 468.959991 l
275.519989 468.300018 l
275.339996 467.700012 l
275.279999 467.279999 l
274.97998 467.100006 l
274.800018 467.399994 l
h
277.019989 472.73999 m
277.259979 473.100006 l
278.040009 474.059998 l
278.459991 474.539978 l
278.880005 474.959991 l
279.300018 475.319977 l
279.600006 475.319977 l
279.600006 474.959991 l
279.179993 474.600006 l
278.759979 474.179993 l
278.399994 473.759979 l
277.619995 472.800018 l
277.440002 472.5 l
277.079987 472.440002 l
277.019989 472.73999 l
h
281.279999 476.700012 m
281.339996 476.759979 l
281.820007 477.0 l
282.419983 477.23999 l
282.959991 477.47998 l
283.5 477.660004 l
284.100006 477.839996 l
284.519989 477.899994 l
284.759979 477.720001 l
284.579987 477.419983 l
284.220001 477.359985 l
283.139984 477.0 l
282.600006 476.819977 l
282.059998 476.579987 l
281.579987 476.339996 l
281.519989 476.279999 l
281.220001 476.399994 l
281.279999 476.700012 l
h
286.919983 478.079987 m
287.160004 478.079987 l
288.359985 477.959991 l
288.959991 477.839996 l
290.160004 477.47998 l
290.279999 477.419983 l
290.459991 477.119995 l
290.160004 476.940002 l
289.97998 477.0 l
288.899994 477.359985 l
288.300018 477.47998 l
287.759979 477.539978 l
287.160004 477.600006 l
286.919983 477.600006 l
286.679993 477.839996 l
286.919983 478.079987 l
h
292.5 476.339996 m
292.800018 476.100006 l
293.279999 475.73999 l
293.759979 475.379974 l
294.23999 474.959991 l
294.660004 474.539978 l
295.079987 474.059998 l
295.079987 473.759979 l
294.720001 473.759979 l
294.300018 474.179993 l
293.880005 474.600006 l
293.459991 474.959991 l
293.040009 475.379974 l
292.559998 475.679993 l
292.200012 475.919983 l
292.139984 476.220001 l
292.5 476.339996 l
h
296.519989 472.139984 m
296.519989 472.019989 l
296.880005 471.47998 l
297.179993 470.879974 l
297.419983 470.279999 l
297.660004 469.679993 l
297.899994 469.079987 l
297.899994 469.019989 l
297.720001 468.720001 l
297.419983 468.839996 l
297.419983 468.899994 l
297.23999 469.5 l
297.0 470.100006 l
296.700012 470.700012 l
296.459991 471.23999 l
296.160004 471.779999 l
296.100006 471.839996 l
296.160004 472.200012 l
296.519989 472.139984 l
h
298.440002 466.619995 m
298.440002 466.440002 l
298.559998 465.779999 l
298.619995 465.059998 l
298.619995 463.679993 l
298.559998 463.200012 l
298.320007 463.019989 l
298.079987 463.259979 l
298.139984 463.679993 l
298.139984 465.059998 l
298.079987 465.720001 l
298.019989 466.379974 l
297.959991 466.559998 l
298.139984 466.800018 l
298.440002 466.619995 l
h
298.200012 460.800018 m
298.079987 460.259979 l
297.899994 459.660004 l
297.660004 459.0 l
297.419983 458.399994 l
297.179993 457.800018 l
297.059998 457.619995 l
296.700012 457.5 l
296.639984 457.800018 l
296.700012 458.039978 l
297.0 458.579987 l
297.23999 459.179993 l
297.419983 459.779999 l
297.600006 460.380005 l
297.720001 460.919983 l
298.019989 461.100006 l
298.200012 460.800018 l
h
295.800018 455.519989 m
295.079987 454.679993 l
294.660004 454.200012 l
294.23999 453.779999 l
293.759979 453.359985 l
293.399994 453.059998 l
293.100006 453.119995 l
293.100006 453.419983 l
293.459991 453.720001 l
293.880005 454.139984 l
294.300018 454.5 l
294.720001 454.97998 l
295.380005 455.819977 l
295.73999 455.880005 l
295.800018 455.519989 l
h
291.359985 451.73999 m
291.23999 451.679993 l
290.700012 451.440002 l
290.160004 451.259979 l
289.559998 451.079987 l
289.019989 450.899994 l
288.419983 450.779999 l
288.059998 450.720001 l
287.820007 450.959991 l
288.0 451.200012 l
288.300018 451.259979 l
288.899994 451.380005 l
289.440002 451.5 l
289.97998 451.679993 l
290.519989 451.919983 l
291.059998 452.160004 l
291.119995 452.160004 l
291.47998 452.100006 l
291.359985 451.73999 l
0.0 0.0 0.0  setrgbcolor
f
0.0 sg
289.5 459.899994 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
1 1856 51 <000200220000042b054c001f002c0178b9002effc040933a352f2e751874
1b741c7c28702e951c077918b724ba28db1bdb1cda24061927102e282639
2539273b28302e5a276927702e802e0bc600011a1c291c4b1cd719db1b05
a82801ca24d917da24d927d828eb24061c40231d28080e1f1b082122011f
1b0721230f1f1b152123001d202c2a1d283f234f2302232307152a281616
150208070812001a101a301a401a701a051a492eb8ffc0403e3f35002e01
402eb02e029f2ec02ed02e032e2c010613130255010c0f0f0255010c0d0d
025501220f0e0c101002550e0c0f0f02550e1a0d0d02550e9e2d2eb80177
b3216163182b2b4ef42b2b2b3c4dfd2b2b2b3c4d105d71722bf65d4d4358
b90026032de91bb90026032ded59003f3c3f3c10ed1112392f5ded123939
12392b2b2b31304379401c2429171c182528262917263301241c26330127
192a3301251b2333002b2b012b2b2b2b81810049547940101e22211f233b
04221e203b0021201f0001103c103c2b002b8101715d0071720172005d01
5d2b01111417163333152135333237363511342726232335213216161514
062322262716163332363534262623220701a41c264d34fdbb335625141b
274d3301f1b6d290dbc831724135521d68974884543350027bfe75801f2c
2525381f74036c801f2c254bb27aa6d00e470a0aa18058974b13>ALALCB+TimesNewRomanPSMT AddT42Char 
1 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>ALALCB+TimesNewRomanPSMT AddT42Char 
ALALCB+TimesNewRomanPSMT /CharStrings get begin
/P 51 def
end
ALALCB+TimesNewRomanPSMT /Encoding get
dup 80 /P put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 10.020004 -10.020004 0.0 0.0 0.0] Tf
(P) show
290.940002 465.47998 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
1 914 21 <0001002c000003ab0568001e0168408207180b3917181c3d3418401c3d34
19401c3d340f1e161629073c074907a9070640205b045a085b175a186b08
741174129c0b9d0e9911ac0bac0ec905c917c818d917d918e020f904f917
1515011d0419051b15191619171d180709170b180b1d3419471989178f20
0718190202171a190c19060d031902050618171615140713040db8016840
090940140c3f80090109b80333400c10051a8f19019f19af190219ba0333
0003018db301020c1eb8018d400d0006e24f135f136f137f130413b80107
4013400001001a002040208020036020a020022019bb01f90003000d0140
40145f026f027f028f02bf02cf02df02ef020802191fba018e010100182b
4e10f45d4de43ced4e105d71f65d4df45ded10ed003f3cedfd5d713c3ffd
71b10602435458b78f0901bf09cf0902005d71592be41112173911123901
111239390210b10602435458b47d198d1902005d590e3c8710057dc40ec4
31300171725d005d012b2b2b002b01032135000035342623220607233636
33321615140706070207213236363703ab5ffce0016101209e6e649f2625
19cf9ba5dd304aa6f93e01626c57461a0105fefb2501420198a981a67571
b9c6d4906767a2b5fef03810312d>ALALCB+TimesNewRomanPSMT AddT42Char 
ALALCB+TimesNewRomanPSMT /CharStrings get begin
/two 21 def
end
ALALCB+TimesNewRomanPSMT /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 6.479996 -6.479996 0.0 0.0 0.0] Tf
(2) show
n
340.559998 410.339996 m
334.019989 410.339996 328.73999 416.399994 328.73999 423.839996 c
328.73999 431.339996 334.019989 437.339996 340.559998 437.339996 c
347.100006 437.339996 352.380005 431.339996 352.380005 423.839996 c
352.380005 416.399994 347.100006 410.339996 340.559998 410.339996 c
1.0 1.0 1.0 setrgbcolor
eofill
n
340.679993 410.100006 m
340.559998 410.100006 l
339.959991 410.160004 l
339.300018 410.160004 l
338.100006 410.399994 l
337.559998 410.519989 l
337.320007 410.639984 l
337.139984 410.940002 l
337.440002 411.059998 l
337.679993 411.0 l
338.759979 410.759979 l
339.359985 410.639984 l
339.959991 410.639984 l
340.559998 410.579987 l
340.679993 410.579987 l
340.919983 410.339996 l
340.679993 410.100006 l
h
335.039978 411.600006 m
334.800018 411.779999 l
334.320007 412.079987 l
333.779999 412.5 l
333.359985 412.859985 l
332.880005 413.279999 l
332.399994 413.759979 l
332.399994 414.119995 l
332.759979 414.059998 l
333.179993 413.639984 l
333.660004 413.220001 l
334.079987 412.859985 l
334.559998 412.5 l
335.039978 412.200012 l
335.279999 412.019989 l
335.399994 411.720001 l
335.039978 411.600006 l
h
330.899994 415.679993 m
330.539978 416.160004 l
330.23999 416.759979 l
329.940002 417.300018 l
329.700012 417.899994 l
329.459991 418.5 l
329.399994 418.73999 l
329.519989 419.039978 l
329.820007 418.859985 l
329.880005 418.679993 l
330.119995 418.079987 l
330.359985 417.539978 l
330.959991 416.459991 l
331.320007 415.919983 l
331.200012 415.619995 l
330.899994 415.679993 l
h
328.73999 421.079987 m
328.619995 421.73999 l
328.559998 422.459991 l
328.5 423.119995 l
328.5 424.5 l
328.73999 424.679993 l
328.97998 424.440002 l
328.97998 423.179993 l
329.100006 421.859985 l
329.220001 421.200012 l
329.220001 421.139984 l
329.039978 420.899994 l
328.73999 421.079987 l
h
328.800018 426.899994 m
328.859985 427.259979 l
329.220001 428.579987 l
329.459991 429.179993 l
329.700012 429.779999 l
329.820007 430.139984 l
330.179993 430.259979 l
330.300018 429.959991 l
330.119995 429.600006 l
329.880005 429.059998 l
329.700012 428.459991 l
329.519989 427.800018 l
329.339996 427.200012 l
329.279999 426.779999 l
328.97998 426.600006 l
328.800018 426.899994 l
h
331.019989 432.23999 m
331.259979 432.600006 l
332.039978 433.559998 l
332.459991 434.039978 l
332.880005 434.459991 l
333.300018 434.819977 l
333.600006 434.819977 l
333.600006 434.459991 l
333.179993 434.100006 l
332.759979 433.679993 l
332.399994 433.259979 l
331.619995 432.300018 l
331.440002 432.0 l
331.079987 431.940002 l
331.019989 432.23999 l
h
335.279999 436.200012 m
335.339996 436.259979 l
335.820007 436.5 l
336.419983 436.73999 l
336.959991 436.97998 l
337.5 437.160004 l
338.100006 437.339996 l
338.519989 437.399994 l
338.759979 437.220001 l
338.579987 436.919983 l
338.220001 436.859985 l
337.679993 436.679993 l
337.139984 436.5 l
336.600006 436.319977 l
336.059998 436.079987 l
335.579987 435.839996 l
335.519989 435.779999 l
335.220001 435.899994 l
335.279999 436.200012 l
h
340.919983 437.579987 m
341.160004 437.579987 l
341.759979 437.519989 l
342.359985 437.459991 l
342.959991 437.339996 l
344.160004 436.97998 l
344.279999 436.919983 l
344.459991 436.619995 l
344.160004 436.440002 l
343.97998 436.5 l
342.899994 436.859985 l
342.300018 436.97998 l
341.759979 437.039978 l
341.160004 437.100006 l
340.919983 437.100006 l
340.679993 437.339996 l
340.919983 437.579987 l
h
346.5 435.839996 m
346.800018 435.600006 l
347.279999 435.23999 l
347.759979 434.880005 l
348.23999 434.459991 l
348.660004 434.039978 l
349.079987 433.559998 l
349.079987 433.259979 l
348.720001 433.259979 l
347.880005 434.100006 l
347.459991 434.459991 l
347.039978 434.880005 l
346.559998 435.179993 l
346.200012 435.419983 l
346.139984 435.720001 l
346.5 435.839996 l
h
350.519989 431.639984 m
350.519989 431.519989 l
350.880005 430.97998 l
351.179993 430.380005 l
351.419983 429.779999 l
351.660004 429.179993 l
351.899994 428.579987 l
351.899994 428.519989 l
351.720001 428.220001 l
351.419983 428.339996 l
351.419983 428.399994 l
351.23999 429.0 l
351.0 429.600006 l
350.700012 430.200012 l
350.459991 430.73999 l
350.160004 431.279999 l
350.100006 431.339996 l
350.160004 431.700012 l
350.519989 431.639984 l
h
352.440002 426.119995 m
352.440002 425.940002 l
352.559998 425.279999 l
352.619995 424.559998 l
352.619995 423.179993 l
352.559998 422.700012 l
352.320007 422.519989 l
352.079987 422.759979 l
352.139984 423.179993 l
352.139984 424.559998 l
352.079987 425.220001 l
352.019989 425.880005 l
351.959991 426.059998 l
352.139984 426.300018 l
352.440002 426.119995 l
h
352.200012 420.300018 m
352.079987 419.759979 l
351.899994 419.160004 l
351.660004 418.5 l
351.419983 417.899994 l
351.179993 417.300018 l
351.059998 417.119995 l
350.700012 417.0 l
350.639984 417.300018 l
350.700012 417.539978 l
351.0 418.079987 l
351.23999 418.679993 l
351.419983 419.279999 l
351.600006 419.880005 l
351.720001 420.419983 l
352.019989 420.600006 l
352.200012 420.300018 l
h
349.800018 415.019989 m
349.079987 414.179993 l
348.660004 413.700012 l
348.23999 413.279999 l
347.759979 412.859985 l
347.399994 412.559998 l
347.100006 412.619995 l
347.100006 412.919983 l
347.459991 413.220001 l
347.880005 413.639984 l
348.300018 414.0 l
348.720001 414.47998 l
349.380005 415.319977 l
349.73999 415.380005 l
349.800018 415.019989 l
h
345.359985 411.23999 m
345.23999 411.179993 l
344.700012 410.940002 l
344.160004 410.759979 l
343.559998 410.579987 l
343.019989 410.399994 l
342.419983 410.279999 l
342.059998 410.220001 l
341.820007 410.459991 l
342.0 410.700012 l
342.300018 410.759979 l
342.899994 410.880005 l
343.440002 411.0 l
343.97998 411.179993 l
344.519989 411.419983 l
345.059998 411.660004 l
345.119995 411.660004 l
345.47998 411.600006 l
345.359985 411.23999 l
0.0 0.0 0.0  setrgbcolor
f
0.0 sg
343.5 418.859985 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
1 2362 53 <0002002300000568054c00280034020240b224180f0f0255250c0f0f0255
872201128526c523c52d034924a72d02181f172e66240309010925262547
0058016f026f247b017b02731f7320762278258a018720982dab01ab25b7
26bc2dff2415062084018c2484279a24a501a402a624af2dbf2dd830ef2d
ff2d0d120016011a0212281a301a313a2e3a306624692f0a2a08021c1c01
151f1b0f21220025281b00081f1b0e2123161f1b1c212340022c25242422
02011402020124ac022002072a29a507b8ffc040170f0f02550710075007
6007039007a0070207001bac1c34b80191400f32281d1d1c020f0e0e0101
00081221b8ffc0b2583521b8ffc040454f350021af21024f21a0210221b5
10360140367036d036033634080613130255080c0f0f0255080c0d0d0255
082216150c10100255150c0f0f0255151a0d0d0255159e3561b901190018
2b4e10f42b2b2b3c4dfd2b2b2b3c105d72f45d712b2b4358b9002f032de9
1bb9002f032ded59003f3c103c103c3f3c10eded10ed12395d722f2bfd3c
103c191a10ed870e2e182b7d10c40112391a182b2b10ed0110c02b871005
7dc43130184379401c2d311e231f252d232f3301311e2f33012e222c3300
23243020323301002b103c2b012b2b2b81810172715d0072715d435c58b9
0025ffe0b20c3901b8fff0b2143928b8ffe0b614390210193928b8fff0b5
103930100f39002b012b2b2b2b002b59015d2b2b21210106232226271114
171633331521353332373635113427262323352132161615140607011616
170132163332363534262322070568fe96fe3533200d1e101c264c35fdbb
335625151c274d3301eed8cd8fa3ab0118608a6ffc3d131c09c2c59f833a
63027a020101fe76801f2c2525381f74036c801f2c253fa9757db826fe7b
86580c029401a8827f9f1300>ALALCB+TimesNewRomanPSMT AddT42Char 
ALALCB+TimesNewRomanPSMT /CharStrings get begin
/R 53 def
end
ALALCB+TimesNewRomanPSMT /Encoding get
dup 82 /R put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 10.020004 -10.020004 0.0 0.0 0.0] Tf
(R) show
344.940002 425.519989 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 6.479996 -6.479996 0.0 0.0 0.0] Tf
(2) show
n
340.559998 357.660004 m
334.019989 357.660004 328.73999 363.720001 328.73999 371.160004 c
328.73999 378.600006 334.019989 384.660004 340.559998 384.660004 c
347.100006 384.660004 352.380005 378.600006 352.380005 371.160004 c
352.380005 363.720001 347.100006 357.660004 340.559998 357.660004 c
1.0 1.0 1.0 setrgbcolor
eofill
n
340.679993 357.419983 m
339.959991 357.419983 l
339.300018 357.47998 l
338.100006 357.720001 l
337.559998 357.839996 l
337.320007 357.899994 l
337.139984 358.200012 l
337.440002 358.380005 l
337.679993 358.319977 l
338.220001 358.139984 l
338.759979 358.019989 l
339.359985 357.959991 l
339.959991 357.899994 l
340.679993 357.899994 l
340.919983 357.660004 l
340.679993 357.419983 l
h
335.039978 358.919983 m
334.800018 359.100006 l
334.320007 359.399994 l
333.779999 359.759979 l
333.359985 360.119995 l
332.880005 360.539978 l
332.459991 361.019989 l
332.399994 361.019989 l
332.399994 361.380005 l
332.759979 361.380005 l
332.759979 361.319977 l
333.179993 360.899994 l
333.660004 360.539978 l
334.079987 360.179993 l
334.559998 359.819977 l
335.039978 359.519989 l
335.279999 359.339996 l
335.399994 358.97998 l
335.039978 358.919983 l
h
330.899994 362.940002 m
330.539978 363.47998 l
330.23999 364.019989 l
329.940002 364.619995 l
329.700012 365.220001 l
329.459991 365.819977 l
329.399994 366.0 l
329.519989 366.300018 l
329.820007 366.179993 l
329.880005 366.0 l
330.119995 365.399994 l
330.359985 364.800018 l
330.660004 364.259979 l
330.959991 363.720001 l
331.320007 363.23999 l
331.200012 362.880005 l
330.899994 362.940002 l
h
328.73999 368.399994 m
328.619995 369.059998 l
328.559998 369.720001 l
328.5 370.440002 l
328.5 371.759979 l
328.73999 372.0 l
328.97998 371.759979 l
328.97998 370.5 l
329.039978 369.779999 l
329.100006 369.119995 l
329.220001 368.459991 l
329.039978 368.160004 l
328.73999 368.399994 l
h
328.800018 374.220001 m
328.859985 374.579987 l
329.039978 375.23999 l
329.220001 375.839996 l
329.459991 376.5 l
329.700012 377.100006 l
329.820007 377.459991 l
330.179993 377.579987 l
330.300018 377.220001 l
330.119995 376.919983 l
329.880005 376.319977 l
329.700012 375.720001 l
329.519989 375.119995 l
329.339996 374.459991 l
329.279999 374.100006 l
328.97998 373.919983 l
328.800018 374.220001 l
h
331.019989 379.559998 m
331.259979 379.859985 l
332.039978 380.880005 l
333.300018 382.139984 l
333.600006 382.079987 l
333.600006 381.779999 l
333.179993 381.419983 l
332.759979 381.0 l
332.399994 380.579987 l
331.619995 379.619995 l
331.440002 379.319977 l
331.079987 379.200012 l
331.019989 379.559998 l
h
335.279999 383.519989 m
335.339996 383.519989 l
335.820007 383.819977 l
336.419983 384.059998 l
336.959991 384.300018 l
337.5 384.47998 l
338.100006 384.600006 l
338.519989 384.720001 l
338.759979 384.47998 l
338.579987 384.23999 l
338.220001 384.119995 l
337.679993 384.0 l
337.139984 383.819977 l
336.600006 383.639984 l
336.059998 383.399994 l
335.579987 383.100006 l
335.519989 383.100006 l
335.220001 383.160004 l
335.279999 383.519989 l
h
340.919983 384.899994 m
341.160004 384.899994 l
341.759979 384.839996 l
342.359985 384.720001 l
342.959991 384.600006 l
343.559998 384.47998 l
344.160004 384.300018 l
344.279999 384.23999 l
344.459991 383.880005 l
344.160004 383.759979 l
343.97998 383.819977 l
343.440002 384.0 l
342.899994 384.119995 l
342.300018 384.23999 l
341.759979 384.359985 l
341.160004 384.419983 l
340.919983 384.419983 l
340.679993 384.660004 l
340.919983 384.899994 l
h
346.5 383.100006 m
346.800018 382.919983 l
347.279999 382.559998 l
347.759979 382.139984 l
348.23999 381.779999 l
348.660004 381.300018 l
349.079987 380.880005 l
349.079987 380.519989 l
348.720001 380.579987 l
348.300018 381.0 l
347.880005 381.419983 l
347.459991 381.779999 l
347.039978 382.139984 l
346.559998 382.5 l
346.200012 382.73999 l
346.139984 383.039978 l
346.5 383.100006 l
h
350.519989 378.899994 m
350.519989 378.839996 l
350.880005 378.300018 l
351.179993 377.700012 l
351.419983 377.100006 l
351.899994 375.899994 l
351.899994 375.779999 l
351.720001 375.47998 l
351.419983 375.660004 l
351.419983 375.720001 l
351.23999 376.319977 l
351.0 376.919983 l
350.700012 377.459991 l
350.459991 378.059998 l
350.160004 378.600006 l
350.100006 378.660004 l
350.160004 378.959991 l
350.519989 378.899994 l
h
352.440002 373.440002 m
352.440002 373.259979 l
352.559998 372.539978 l
352.619995 371.880005 l
352.619995 370.440002 l
352.559998 370.019989 l
352.320007 369.779999 l
352.079987 370.019989 l
352.139984 370.440002 l
352.139984 371.819977 l
352.079987 372.47998 l
352.019989 373.200012 l
351.959991 373.319977 l
352.139984 373.619995 l
352.440002 373.440002 l
h
352.200012 367.619995 m
352.079987 367.079987 l
351.899994 366.419983 l
351.660004 365.819977 l
351.419983 365.220001 l
351.179993 364.619995 l
351.059998 364.380005 l
350.700012 364.319977 l
350.639984 364.619995 l
350.700012 364.800018 l
351.0 365.399994 l
351.23999 366.0 l
351.419983 366.600006 l
351.600006 367.200012 l
351.720001 367.73999 l
352.019989 367.919983 l
352.200012 367.619995 l
h
349.800018 362.339996 m
349.079987 361.440002 l
348.660004 361.019989 l
348.23999 360.539978 l
347.759979 360.179993 l
347.399994 359.880005 l
347.100006 359.880005 l
347.100006 360.23999 l
347.459991 360.539978 l
347.880005 360.899994 l
348.720001 361.73999 l
349.380005 362.639984 l
349.73999 362.639984 l
349.800018 362.339996 l
h
345.359985 358.559998 m
345.23999 358.5 l
344.700012 358.259979 l
344.160004 358.019989 l
343.559998 357.839996 l
343.019989 357.720001 l
342.419983 357.600006 l
342.059998 357.539978 l
341.820007 357.720001 l
342.0 358.019989 l
342.300018 358.019989 l
342.899994 358.139984 l
343.97998 358.5 l
344.519989 358.679993 l
345.059998 358.919983 l
345.119995 358.97998 l
345.47998 358.859985 l
345.359985 358.559998 l
0.0 0.0 0.0  setrgbcolor
f
0.0 sg
343.5 366.179993 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 10.020004 -10.020004 0.0 0.0 0.0] Tf
(R) show
344.940002 372.839996 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
1 686 20 <000100f000000306056800160097401440186018a018e018040018401802
76008600020e411301690141000901a00022000301690141000801a00023
000001f8000f016900160141000001f2400e010f0f020902010509080c02
0300ba01f70003014940120e0e0f401135300f7f0f900fa00f040f1917ba
022401e400182b4e10f45d2b3c4d10ede4103c003f3c3f3c111239011139
00f5edfc01f52b2b3130005d01715d13253311141616171521353e023511
34272626232207f0014a21133c5cfe026038160a07251a254204c7a1fb87
72381e022525021d317a02dc942a201e1f00>ALALCB+TimesNewRomanPSMT AddT42Char 
ALALCB+TimesNewRomanPSMT /CharStrings get begin
/one 20 def
end
ALALCB+TimesNewRomanPSMT /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 6.479996 -6.479996 0.0 0.0 0.0] Tf
(1) show
n
286.559998 369.839996 m
280.019989 369.839996 274.73999 375.899994 274.73999 383.339996 c
274.73999 390.839996 280.019989 396.839996 286.559998 396.839996 c
293.100006 396.839996 298.380005 390.839996 298.380005 383.339996 c
298.380005 375.899994 293.100006 369.839996 286.559998 369.839996 c
1.0 1.0 1.0 setrgbcolor
eofill
n
286.679993 369.600006 m
286.559998 369.600006 l
285.959991 369.660004 l
285.300018 369.660004 l
284.700012 369.779999 l
284.100006 369.899994 l
283.559998 370.019989 l
283.320007 370.139984 l
283.139984 370.440002 l
283.440002 370.559998 l
283.679993 370.5 l
284.759979 370.259979 l
285.359985 370.139984 l
285.959991 370.139984 l
286.559998 370.079987 l
286.679993 370.079987 l
286.919983 369.839996 l
286.679993 369.600006 l
h
281.040009 371.100006 m
280.800018 371.279999 l
280.320007 371.579987 l
279.779999 372.0 l
279.359985 372.359985 l
278.880005 372.779999 l
278.399994 373.259979 l
278.399994 373.619995 l
278.759979 373.559998 l
279.179993 373.139984 l
279.660004 372.720001 l
280.079987 372.359985 l
280.559998 372.0 l
281.040009 371.700012 l
281.279999 371.519989 l
281.399994 371.220001 l
281.040009 371.100006 l
h
276.899994 375.179993 m
276.540009 375.660004 l
276.23999 376.259979 l
275.940002 376.800018 l
275.700012 377.399994 l
275.459991 378.0 l
275.399994 378.23999 l
275.519989 378.539978 l
275.820007 378.359985 l
275.880005 378.179993 l
276.119995 377.579987 l
276.359985 377.039978 l
276.959991 375.959991 l
277.320007 375.419983 l
277.200012 375.119995 l
276.899994 375.179993 l
h
274.73999 380.579987 m
274.619995 381.23999 l
274.559998 381.959991 l
274.5 382.619995 l
274.5 384.0 l
274.73999 384.179993 l
274.97998 383.940002 l
274.97998 382.679993 l
275.100006 381.359985 l
275.220001 380.700012 l
275.220001 380.639984 l
275.040009 380.399994 l
274.73999 380.579987 l
h
274.800018 386.399994 m
274.859985 386.759979 l
275.040009 387.419983 l
275.220001 388.079987 l
275.459991 388.679993 l
275.700012 389.279999 l
275.820007 389.639984 l
276.179993 389.759979 l
276.300018 389.459991 l
276.119995 389.100006 l
275.880005 388.559998 l
275.700012 387.959991 l
275.519989 387.300018 l
275.339996 386.700012 l
275.279999 386.279999 l
274.97998 386.100006 l
274.800018 386.399994 l
h
277.019989 391.73999 m
277.259979 392.100006 l
278.040009 393.059998 l
278.459991 393.539978 l
278.880005 393.959991 l
279.300018 394.319977 l
279.600006 394.319977 l
279.600006 393.959991 l
279.179993 393.600006 l
278.759979 393.179993 l
278.399994 392.759979 l
277.619995 391.800018 l
277.440002 391.5 l
277.079987 391.440002 l
277.019989 391.73999 l
h
281.279999 395.700012 m
281.339996 395.759979 l
281.820007 396.0 l
282.419983 396.23999 l
282.959991 396.47998 l
283.5 396.660004 l
284.100006 396.839996 l
284.519989 396.899994 l
284.759979 396.720001 l
284.579987 396.419983 l
284.220001 396.359985 l
283.139984 396.0 l
282.600006 395.819977 l
282.059998 395.579987 l
281.579987 395.339996 l
281.519989 395.279999 l
281.220001 395.399994 l
281.279999 395.700012 l
h
286.919983 397.079987 m
287.160004 397.079987 l
288.359985 396.959991 l
288.959991 396.839996 l
290.160004 396.47998 l
290.279999 396.419983 l
290.459991 396.119995 l
290.160004 395.940002 l
289.97998 396.0 l
288.899994 396.359985 l
288.300018 396.47998 l
287.759979 396.539978 l
287.160004 396.600006 l
286.919983 396.600006 l
286.679993 396.839996 l
286.919983 397.079987 l
h
292.5 395.339996 m
292.800018 395.100006 l
293.279999 394.73999 l
293.759979 394.380005 l
294.23999 393.959991 l
294.660004 393.539978 l
295.079987 393.059998 l
295.079987 392.759979 l
294.720001 392.759979 l
294.300018 393.179993 l
293.880005 393.600006 l
293.459991 393.959991 l
293.040009 394.380005 l
292.559998 394.679993 l
292.200012 394.919983 l
292.139984 395.220001 l
292.5 395.339996 l
h
296.519989 391.139984 m
296.519989 391.019989 l
296.880005 390.47998 l
297.179993 389.880005 l
297.419983 389.279999 l
297.899994 388.079987 l
297.899994 388.019989 l
297.720001 387.720001 l
297.419983 387.839996 l
297.419983 387.899994 l
297.23999 388.5 l
297.0 389.100006 l
296.700012 389.700012 l
296.459991 390.23999 l
296.160004 390.779999 l
296.100006 390.839996 l
296.160004 391.200012 l
296.519989 391.139984 l
h
298.440002 385.619995 m
298.440002 385.440002 l
298.559998 384.779999 l
298.619995 384.059998 l
298.619995 382.679993 l
298.559998 382.200012 l
298.320007 382.019989 l
298.079987 382.259979 l
298.139984 382.679993 l
298.139984 384.059998 l
298.079987 384.720001 l
298.019989 385.380005 l
297.959991 385.559998 l
298.139984 385.800018 l
298.440002 385.619995 l
h
298.200012 379.800018 m
298.079987 379.259979 l
297.899994 378.660004 l
297.660004 378.0 l
297.419983 377.399994 l
297.179993 376.800018 l
297.059998 376.619995 l
296.700012 376.5 l
296.639984 376.800018 l
296.700012 377.039978 l
297.0 377.579987 l
297.23999 378.179993 l
297.419983 378.779999 l
297.600006 379.380005 l
297.720001 379.919983 l
298.019989 380.100006 l
298.200012 379.800018 l
h
295.800018 374.519989 m
295.079987 373.679993 l
294.660004 373.200012 l
294.23999 372.779999 l
293.759979 372.359985 l
293.399994 372.059998 l
293.100006 372.119995 l
293.100006 372.419983 l
293.459991 372.720001 l
293.880005 373.139984 l
294.300018 373.5 l
294.720001 373.97998 l
295.380005 374.819977 l
295.73999 374.880005 l
295.800018 374.519989 l
h
291.359985 370.73999 m
291.23999 370.679993 l
290.700012 370.440002 l
290.160004 370.259979 l
289.559998 370.079987 l
289.019989 369.899994 l
288.419983 369.779999 l
288.059998 369.720001 l
287.820007 369.959991 l
288.0 370.200012 l
288.300018 370.259979 l
288.899994 370.380005 l
289.440002 370.5 l
289.97998 370.679993 l
290.519989 370.919983 l
291.059998 371.160004 l
291.119995 371.160004 l
291.47998 371.100006 l
291.359985 370.73999 l
0.0 0.0 0.0  setrgbcolor
f
0.0 sg
289.5 378.899994 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 10.020004 -10.020004 0.0 0.0 0.0] Tf
(P) show
290.940002 384.47998 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 6.479996 -6.479996 0.0 0.0 0.0] Tf
(1) show
n
340.559998 463.380005 m
334.019989 463.380005 328.73999 469.440002 328.73999 476.879974 c
328.73999 484.379974 334.019989 490.379974 340.559998 490.379974 c
347.100006 490.379974 352.380005 484.379974 352.380005 476.879974 c
352.380005 469.440002 347.100006 463.380005 340.559998 463.380005 c
1.0 1.0 1.0 setrgbcolor
eofill
n
340.679993 463.139984 m
340.559998 463.139984 l
339.959991 463.200012 l
339.300018 463.259979 l
338.700012 463.319977 l
338.100006 463.440002 l
337.559998 463.619995 l
337.320007 463.679993 l
337.139984 463.97998 l
337.440002 464.160004 l
337.679993 464.039978 l
338.220001 463.919983 l
338.759979 463.800018 l
339.359985 463.73999 l
339.959991 463.679993 l
340.559998 463.619995 l
340.679993 463.619995 l
340.919983 463.440002 l
340.679993 463.139984 l
h
335.039978 464.700012 m
334.800018 464.819977 l
334.320007 465.179993 l
333.779999 465.539978 l
333.359985 465.899994 l
332.880005 466.319977 l
332.459991 466.73999 l
332.399994 466.800018 l
332.399994 467.160004 l
332.759979 467.100006 l
333.179993 466.679993 l
333.660004 466.259979 l
334.079987 465.899994 l
334.559998 465.539978 l
335.039978 465.23999 l
335.279999 465.059998 l
335.399994 464.759979 l
335.039978 464.700012 l
h
330.899994 468.720001 m
330.539978 469.200012 l
330.23999 469.800018 l
329.940002 470.339996 l
329.700012 470.940002 l
329.459991 471.539978 l
329.399994 471.779999 l
329.519989 472.079987 l
329.820007 471.959991 l
329.880005 471.720001 l
330.119995 471.119995 l
330.359985 470.579987 l
330.959991 469.5 l
331.320007 468.959991 l
331.200012 468.660004 l
330.899994 468.720001 l
h
328.73999 474.119995 m
328.619995 474.839996 l
328.559998 475.5 l
328.5 476.220001 l
328.5 477.539978 l
328.73999 477.779999 l
328.97998 477.47998 l
328.97998 476.220001 l
329.100006 474.899994 l
329.220001 474.23999 l
329.039978 473.940002 l
328.73999 474.119995 l
h
328.800018 479.940002 m
328.859985 480.300018 l
329.039978 480.959991 l
329.220001 481.619995 l
329.459991 482.220001 l
329.700012 482.819977 l
329.820007 483.179993 l
330.179993 483.300018 l
330.300018 483.0 l
330.119995 482.639984 l
329.880005 482.100006 l
329.700012 481.5 l
329.519989 480.839996 l
329.339996 480.23999 l
329.279999 479.819977 l
328.97998 479.639984 l
328.800018 479.940002 l
h
331.019989 485.279999 m
331.259979 485.639984 l
332.039978 486.600006 l
332.459991 487.079987 l
332.880005 487.5 l
333.300018 487.859985 l
333.600006 487.859985 l
333.600006 487.5 l
333.179993 487.139984 l
332.759979 486.720001 l
332.399994 486.300018 l
331.619995 485.339996 l
331.440002 485.039978 l
331.079987 484.97998 l
331.019989 485.279999 l
h
335.279999 489.23999 m
335.339996 489.300018 l
335.820007 489.539978 l
336.419983 489.779999 l
336.959991 490.019989 l
337.5 490.200012 l
338.100006 490.379974 l
338.519989 490.440002 l
338.759979 490.259979 l
338.579987 489.959991 l
338.220001 489.899994 l
337.679993 489.779999 l
337.139984 489.600006 l
336.600006 489.359985 l
336.059998 489.119995 l
335.579987 488.879974 l
335.519989 488.879974 l
335.220001 488.940002 l
335.279999 489.23999 l
h
340.919983 490.619995 m
341.160004 490.619995 l
342.359985 490.5 l
342.959991 490.379974 l
344.160004 490.019989 l
344.279999 489.959991 l
344.459991 489.660004 l
344.160004 489.539978 l
343.97998 489.539978 l
342.899994 489.899994 l
342.300018 490.019989 l
341.759979 490.079987 l
341.160004 490.139984 l
340.919983 490.139984 l
340.679993 490.379974 l
340.919983 490.619995 l
h
346.5 488.879974 m
346.800018 488.639984 l
347.279999 488.279999 l
347.759979 487.919983 l
348.23999 487.5 l
348.660004 487.079987 l
349.079987 486.660004 l
349.079987 486.300018 l
348.720001 486.300018 l
348.300018 486.720001 l
347.880005 487.139984 l
347.459991 487.559998 l
347.039978 487.919983 l
346.559998 488.279999 l
346.200012 488.459991 l
346.139984 488.819977 l
346.5 488.879974 l
h
350.519989 484.679993 m
350.519989 484.559998 l
350.880005 484.019989 l
351.179993 483.419983 l
351.419983 482.879974 l
351.660004 482.220001 l
351.899994 481.619995 l
351.899994 481.559998 l
351.720001 481.259979 l
351.419983 481.379974 l
351.419983 481.440002 l
351.23999 482.100006 l
351.0 482.639984 l
350.700012 483.23999 l
350.459991 483.779999 l
350.160004 484.319977 l
350.100006 484.379974 l
350.160004 484.73999 l
350.519989 484.679993 l
h
352.440002 479.160004 m
352.440002 478.97998 l
352.559998 478.319977 l
352.619995 477.600006 l
352.619995 476.220001 l
352.559998 475.73999 l
352.320007 475.559998 l
352.079987 475.800018 l
352.139984 476.220001 l
352.139984 477.600006 l
352.079987 478.259979 l
352.019989 478.919983 l
351.959991 479.100006 l
352.139984 479.339996 l
352.440002 479.160004 l
h
352.200012 473.339996 m
352.079987 472.859985 l
351.899994 472.200012 l
351.660004 471.600006 l
351.419983 470.940002 l
351.179993 470.399994 l
351.059998 470.160004 l
350.700012 470.039978 l
350.639984 470.339996 l
350.700012 470.579987 l
351.0 471.119995 l
351.23999 471.720001 l
351.419983 472.319977 l
351.600006 472.97998 l
351.720001 473.459991 l
352.019989 473.639984 l
352.200012 473.339996 l
h
349.800018 468.059998 m
349.079987 467.220001 l
348.660004 466.73999 l
348.23999 466.319977 l
347.759979 465.899994 l
347.399994 465.600006 l
347.100006 465.660004 l
347.100006 465.959991 l
347.459991 466.259979 l
347.880005 466.679993 l
348.300018 467.100006 l
348.720001 467.519989 l
349.380005 468.359985 l
349.73999 468.419983 l
349.800018 468.059998 l
h
345.359985 464.279999 m
345.23999 464.279999 l
344.700012 463.97998 l
344.160004 463.800018 l
343.559998 463.619995 l
343.019989 463.440002 l
342.419983 463.319977 l
342.059998 463.259979 l
341.820007 463.5 l
342.0 463.73999 l
342.300018 463.800018 l
342.899994 463.919983 l
343.440002 464.039978 l
343.97998 464.220001 l
344.519989 464.459991 l
345.059998 464.700012 l
345.119995 464.700012 l
345.47998 464.639984 l
345.359985 464.279999 l
0.0 0.0 0.0  setrgbcolor
f
0.0 sg
343.5 471.899994 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 10.020004 -10.020004 0.0 0.0 0.0] Tf
(R) show
344.940002 478.559998 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
1 1378 22 <00010053ffe8035605680032014cb9000affe0b20c3909b8ffc0403c0c39
4109450a460b4b2204cf09012929382940346034cf34e034f70a07003401
41097f237a2eaa24b924ba2ec92edf23df25db2eea22e9250c490829b801
8cb328281000b802e4b3d0300130b80334b5030510160116b8019fb51d40
2b2f341db80143b3100d2928bb01680014000902e3400b50208020029020
a0200220b80333b3b00c010cb80190400b502d802d02902da02d022db803
33b55f077f070207b802e5400a403401a034c034023400b8013eb74013bf
1302131933ba011e01e800182b4e10f45d4de4105d71f65ded5d71f45ded
5d71e410f43c003fed2bed723fed5ded12392fed3130437940362e2f1e26
0a0f04062221232124212521040605250e26260a2062012f042d62011e0f
206201210b2762010a092e063062011f0d1d62002b2b103c2b012b2b2b2b
2b2a81818181005d01715d7200712b2b1336363332171615140716161514
070621222635343633321716161716333236353427262726262323353e02
353426232207683ab184a35742ba7d807092feeb89632f21191a11781725
2a6697231a1f2b964e204f9f4881609b68044a89956a4f5a949e31b67bb0
81a844271d2c08053f060b9e6c4f4b381d28411e0a5e844f677fa600>ALALCB+TimesNewRomanPSMT AddT42Char 
ALALCB+TimesNewRomanPSMT /CharStrings get begin
/three 22 def
end
ALALCB+TimesNewRomanPSMT /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 6.479996 -6.479996 0.0 0.0 0.0] Tf
(3) show
n
240.959991 410.339996 m
234.479996 410.339996 229.199997 416.399994 229.199997 423.839996 c
229.199997 431.339996 234.479996 437.339996 240.959991 437.339996 c
247.5 437.339996 252.779999 431.339996 252.779999 423.839996 c
252.779999 416.399994 247.5 410.339996 240.959991 410.339996 c
1.0 1.0 1.0 setrgbcolor
eofill
n
241.139999 410.100006 m
241.019989 410.100006 l
240.360001 410.160004 l
239.759995 410.160004 l
239.159988 410.279999 l
237.959991 410.519989 l
237.720001 410.639984 l
237.600006 410.940002 l
237.900009 411.059998 l
238.080002 411.0 l
238.679993 410.880005 l
239.220001 410.759979 l
239.819992 410.639984 l
240.419998 410.639984 l
240.959991 410.579987 l
241.139999 410.579987 l
241.37999 410.339996 l
241.139999 410.100006 l
h
235.5 411.600006 m
235.259995 411.779999 l
234.720001 412.079987 l
234.23999 412.5 l
233.759995 412.859985 l
233.339996 413.279999 l
232.860001 413.700012 l
232.800003 413.759979 l
232.860001 414.119995 l
233.159988 414.059998 l
233.220001 414.059998 l
233.639999 413.639984 l
234.059998 413.220001 l
234.539993 412.859985 l
235.019989 412.5 l
235.5 412.200012 l
235.73999 412.019989 l
235.860001 411.720001 l
235.5 411.600006 l
h
231.300003 415.679993 m
231.0 416.160004 l
230.699997 416.759979 l
230.400009 417.300018 l
230.100006 417.899994 l
229.860001 418.5 l
229.800003 418.73999 l
229.979996 419.039978 l
230.279999 418.859985 l
230.339996 418.679993 l
230.580002 418.079987 l
230.819992 417.539978 l
231.419998 416.459991 l
231.720001 415.919983 l
231.659988 415.619995 l
231.300003 415.679993 l
h
229.199997 421.079987 m
229.080002 421.73999 l
229.019989 422.459991 l
228.959991 423.119995 l
228.959991 424.5 l
229.199997 424.679993 l
229.440002 424.440002 l
229.440002 423.179993 l
229.5 422.519989 l
229.559998 421.859985 l
229.679993 421.200012 l
229.679993 421.139984 l
229.440002 420.899994 l
229.199997 421.079987 l
h
229.259995 426.899994 m
229.319992 427.259979 l
229.679993 428.579987 l
229.860001 429.179993 l
230.100006 429.779999 l
230.279999 430.139984 l
230.580002 430.259979 l
230.699997 429.959991 l
230.580002 429.600006 l
230.339996 429.059998 l
230.100006 428.459991 l
229.919998 427.800018 l
229.800003 427.200012 l
229.679993 426.779999 l
229.440002 426.600006 l
229.259995 426.899994 l
h
231.479996 432.23999 m
231.659988 432.600006 l
232.439987 433.559998 l
232.860001 434.039978 l
233.279999 434.459991 l
233.699997 434.819977 l
234.059998 434.819977 l
234.059998 434.459991 l
233.639999 434.100006 l
233.220001 433.679993 l
232.800003 433.259979 l
232.080002 432.300018 l
231.839996 432.0 l
231.539993 431.940002 l
231.479996 432.23999 l
h
235.73999 436.200012 m
235.73999 436.259979 l
236.819992 436.73999 l
237.419998 436.97998 l
237.959991 437.160004 l
238.559998 437.339996 l
238.919998 437.399994 l
239.220001 437.220001 l
239.039993 436.919983 l
238.679993 436.859985 l
238.139999 436.679993 l
237.539993 436.5 l
237.0 436.319977 l
236.519989 436.079987 l
235.979996 435.839996 l
235.979996 435.779999 l
235.619995 435.899994 l
235.73999 436.200012 l
h
241.37999 437.579987 m
241.619995 437.579987 l
242.220001 437.519989 l
242.819992 437.459991 l
243.419998 437.339996 l
244.019989 437.160004 l
244.559998 436.97998 l
244.73999 436.919983 l
244.860001 436.619995 l
244.559998 436.440002 l
244.439987 436.5 l
243.900009 436.679993 l
243.300003 436.859985 l
242.759995 436.97998 l
242.159988 437.039978 l
241.619995 437.100006 l
241.37999 437.100006 l
241.139999 437.339996 l
241.37999 437.579987 l
h
246.900009 435.839996 m
247.259995 435.600006 l
247.73999 435.23999 l
248.220001 434.880005 l
248.639999 434.459991 l
249.119995 434.039978 l
249.479996 433.559998 l
249.479996 433.259979 l
249.179993 433.259979 l
248.759995 433.679993 l
248.339996 434.100006 l
247.919998 434.459991 l
247.439987 434.880005 l
246.959991 435.179993 l
246.659988 435.419983 l
246.600006 435.720001 l
246.900009 435.839996 l
h
250.919998 431.639984 m
250.979996 431.519989 l
251.279999 430.97998 l
251.87999 429.779999 l
252.119995 429.179993 l
252.300003 428.579987 l
252.360001 428.519989 l
252.179993 428.220001 l
251.87999 428.339996 l
251.87999 428.399994 l
251.400009 429.600006 l
251.159988 430.200012 l
250.860001 430.73999 l
250.559998 431.279999 l
250.559998 431.339996 l
250.619995 431.700012 l
250.919998 431.639984 l
h
252.900009 426.119995 m
252.900009 425.940002 l
252.959991 425.279999 l
253.019989 424.559998 l
253.019989 422.700012 l
252.720001 422.519989 l
252.539993 422.759979 l
252.539993 424.559998 l
252.479996 425.220001 l
252.419998 425.880005 l
252.419998 426.059998 l
252.600006 426.300018 l
252.900009 426.119995 l
h
252.659988 420.300018 m
252.479996 419.759979 l
252.300003 419.160004 l
252.119995 418.5 l
251.87999 417.899994 l
251.580002 417.300018 l
251.459991 417.119995 l
251.159988 417.0 l
251.039993 417.300018 l
251.159988 417.539978 l
251.400009 418.079987 l
251.87999 419.279999 l
252.059998 419.880005 l
252.179993 420.419983 l
252.479996 420.600006 l
252.659988 420.300018 l
h
250.199997 415.019989 m
249.539993 414.179993 l
249.119995 413.700012 l
248.699997 413.279999 l
248.220001 412.859985 l
247.860001 412.559998 l
247.5 412.619995 l
247.559998 412.919983 l
247.919998 413.220001 l
248.339996 413.639984 l
248.759995 414.0 l
249.179993 414.47998 l
249.839996 415.319977 l
250.139999 415.380005 l
250.199997 415.019989 l
h
245.759995 411.23999 m
245.699997 411.179993 l
245.159988 410.940002 l
244.559998 410.759979 l
244.019989 410.579987 l
243.419998 410.399994 l
242.819992 410.279999 l
242.519989 410.220001 l
242.220001 410.459991 l
242.459991 410.700012 l
242.759995 410.759979 l
243.300003 410.880005 l
243.839996 411.0 l
244.439987 411.179993 l
244.979996 411.419983 l
245.459991 411.660004 l
245.580002 411.660004 l
245.87999 411.600006 l
245.759995 411.23999 l
0.0 0.0 0.0  setrgbcolor
f
0.0 sg
243.959991 419.399994 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 10.020004 -10.020004 0.0 0.0 0.0] Tf
(P) show
245.400009 424.97998 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
1 380 19 <0002004affe803b705680010002400bab2610820b80106b2050515b80106
b20d0d1ab8010f4012091a002640260240266026a026e026042611b8010f
400e5f006f007f008f00a00005001925ba011e010100182b4e10f45d4ded
4e105d71f64ded003fed3fed31304379404c012423242224020602010301
020607251c1b1d1b1e1b030613260f250b2618191719020621041162001f
061a6201140e116200160c1a620124012062011b08206201121015620019
0a1562002b2b2b2b012b2b2b2b2a2b2b2b2a2b2a2a811334123736333217
16111402062322272637101716333236373611342726272623220706024a
8c745a609c7c9b88d362c2816dc445397136741e2e302439293a44354834
029ee8014f52419fc5feafecfeb695e5c1f7fee8b1956172ac0139e89b73
30213d53fe9c>ALALCB+TimesNewRomanPSMT AddT42Char 
ALALCB+TimesNewRomanPSMT /CharStrings get begin
/zero 19 def
end
ALALCB+TimesNewRomanPSMT /Encoding get
dup 48 /zero put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 6.479996 -6.479996 0.0 0.0 0.0] Tf
(0) show
n
340.320007 495.600006 m
369.899994 503.100006 390.600006 486.359985 387.419983 457.380005 c
0.0 0.0 0.0 setrgbcolor
S
n
387.0 454.5 m
385.619995 458.579987 l
386.759979 457.800018 388.139984 457.619995 389.459991 458.100006 c
387.0 454.5 l
eofill
n
388.380005 410.339996 m
381.839996 410.339996 376.559998 416.399994 376.559998 423.839996 c
376.559998 431.339996 381.839996 437.339996 388.380005 437.339996 c
394.859985 437.339996 400.200012 431.339996 400.200012 423.839996 c
400.200012 416.399994 394.859985 410.339996 388.380005 410.339996 c
1.0 1.0 1.0  setrgbcolor
eofill
n
388.5 410.100006 m
388.380005 410.100006 l
387.779999 410.160004 l
387.119995 410.160004 l
386.519989 410.279999 l
385.919983 410.399994 l
385.380005 410.519989 l
385.139984 410.639984 l
384.959991 410.940002 l
385.259979 411.059998 l
385.5 411.0 l
386.039978 410.880005 l
386.579987 410.759979 l
387.179993 410.639984 l
387.779999 410.639984 l
388.380005 410.579987 l
388.5 410.579987 l
388.73999 410.339996 l
388.5 410.100006 l
h
382.859985 411.600006 m
382.619995 411.779999 l
382.079987 412.079987 l
381.600006 412.5 l
381.119995 412.859985 l
380.700012 413.279999 l
380.220001 413.759979 l
380.220001 414.119995 l
380.579987 414.059998 l
381.0 413.639984 l
381.419983 413.220001 l
381.899994 412.859985 l
382.380005 412.5 l
382.859985 412.200012 l
383.100006 412.019989 l
383.220001 411.720001 l
382.859985 411.600006 l
h
378.720001 415.679993 m
378.359985 416.160004 l
378.059998 416.759979 l
377.759979 417.300018 l
377.519989 417.899994 l
377.279999 418.5 l
377.160004 418.73999 l
377.339996 419.039978 l
377.639984 418.859985 l
377.700012 418.679993 l
377.940002 418.079987 l
378.179993 417.539978 l
378.47998 417.0 l
378.779999 416.459991 l
379.079987 415.919983 l
379.019989 415.619995 l
378.720001 415.679993 l
h
376.559998 421.079987 m
376.440002 421.73999 l
376.380005 422.459991 l
376.319977 423.119995 l
376.319977 424.5 l
376.559998 424.679993 l
376.800018 424.440002 l
376.800018 423.179993 l
376.919983 421.859985 l
377.039978 421.200012 l
377.039978 421.139984 l
376.859985 420.899994 l
376.559998 421.079987 l
h
376.619995 426.899994 m
376.679993 427.259979 l
376.859985 427.919983 l
377.039978 428.579987 l
377.279999 429.179993 l
377.519989 429.779999 l
377.639984 430.139984 l
377.940002 430.259979 l
378.059998 429.959991 l
377.940002 429.600006 l
377.700012 429.059998 l
377.519989 428.459991 l
377.339996 427.800018 l
377.160004 427.200012 l
377.100006 426.779999 l
376.800018 426.600006 l
376.619995 426.899994 l
h
378.839996 432.23999 m
379.019989 432.600006 l
379.800018 433.559998 l
380.220001 434.039978 l
380.700012 434.459991 l
381.119995 434.819977 l
381.419983 434.819977 l
381.419983 434.459991 l
381.0 434.100006 l
380.579987 433.679993 l
380.220001 433.259979 l
379.440002 432.300018 l
379.259979 432.0 l
378.899994 431.940002 l
378.839996 432.23999 l
h
383.100006 436.200012 m
383.100006 436.259979 l
384.179993 436.73999 l
384.779999 436.97998 l
385.319977 437.160004 l
385.919983 437.339996 l
386.339996 437.399994 l
386.579987 437.220001 l
386.399994 436.919983 l
386.039978 436.859985 l
384.959991 436.5 l
384.419983 436.319977 l
383.880005 436.079987 l
383.339996 435.839996 l
383.339996 435.779999 l
383.039978 435.899994 l
383.100006 436.200012 l
h
388.73999 437.579987 m
388.97998 437.579987 l
389.579987 437.519989 l
390.179993 437.459991 l
390.779999 437.339996 l
391.97998 436.97998 l
392.100006 436.919983 l
392.279999 436.619995 l
391.919983 436.440002 l
391.800018 436.5 l
390.720001 436.859985 l
390.119995 436.97998 l
389.579987 437.039978 l
388.97998 437.100006 l
388.73999 437.100006 l
388.5 437.339996 l
388.73999 437.579987 l
h
394.319977 435.839996 m
394.619995 435.600006 l
395.100006 435.23999 l
395.579987 434.880005 l
396.059998 434.459991 l
396.47998 434.039978 l
396.899994 433.559998 l
396.839996 433.259979 l
396.539978 433.259979 l
396.119995 433.679993 l
395.700012 434.100006 l
395.279999 434.459991 l
394.800018 434.880005 l
394.380005 435.179993 l
394.019989 435.419983 l
393.959991 435.720001 l
394.319977 435.839996 l
h
398.339996 431.639984 m
398.339996 431.519989 l
398.700012 430.97998 l
398.940002 430.380005 l
399.23999 429.779999 l
399.47998 429.179993 l
399.660004 428.579987 l
399.720001 428.519989 l
399.539978 428.220001 l
399.23999 428.339996 l
399.23999 428.399994 l
399.0 429.0 l
398.819977 429.600006 l
398.519989 430.200012 l
398.279999 430.73999 l
397.97998 431.279999 l
397.919983 431.339996 l
397.97998 431.700012 l
398.339996 431.639984 l
h
400.259979 426.119995 m
400.259979 425.940002 l
400.380005 425.279999 l
400.380005 424.559998 l
400.440002 423.839996 l
400.380005 423.179993 l
400.380005 422.700012 l
400.139984 422.519989 l
399.899994 422.759979 l
399.899994 423.179993 l
399.959991 423.839996 l
399.899994 424.559998 l
399.899994 425.220001 l
399.779999 425.880005 l
399.779999 426.059998 l
399.959991 426.300018 l
400.259979 426.119995 l
h
400.019989 420.300018 m
399.899994 419.759979 l
399.720001 419.160004 l
399.47998 418.5 l
399.23999 417.899994 l
399.0 417.300018 l
398.880005 417.119995 l
398.519989 417.0 l
398.459991 417.300018 l
398.519989 417.539978 l
398.759979 418.079987 l
399.0 418.679993 l
399.23999 419.279999 l
399.419983 419.880005 l
399.539978 420.419983 l
399.839996 420.600006 l
400.019989 420.300018 l
h
397.559998 415.019989 m
396.899994 414.179993 l
396.47998 413.700012 l
396.059998 413.279999 l
395.579987 412.859985 l
395.220001 412.559998 l
394.859985 412.619995 l
394.919983 412.919983 l
395.279999 413.220001 l
395.700012 413.639984 l
396.119995 414.0 l
396.539978 414.47998 l
397.200012 415.319977 l
397.559998 415.380005 l
397.559998 415.019989 l
h
393.179993 411.23999 m
393.059998 411.179993 l
392.519989 410.940002 l
391.97998 410.759979 l
391.380005 410.579987 l
390.779999 410.399994 l
390.23999 410.279999 l
389.880005 410.220001 l
389.639984 410.459991 l
389.819977 410.700012 l
390.119995 410.759979 l
390.660004 410.880005 l
391.259979 411.0 l
391.800018 411.179993 l
392.339996 411.419983 l
392.880005 411.660004 l
392.940002 411.660004 l
393.23999 411.600006 l
393.179993 411.23999 l
0.0 0.0 0.0  setrgbcolor
f
0.0 sg
391.319977 419.399994 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 10.020004 -10.020004 0.0 0.0 0.0] Tf
(P) show
392.759979 424.97998 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 6.479996 -6.479996 0.0 0.0 0.0] Tf
(0) show
n
326.039978 372.23999 m
313.019989 378.0 302.459991 392.100006 301.5 405.0 c
0.0 0.0 0.0 setrgbcolor
S
n
328.73999 371.160004 m
324.47998 370.73999 l
325.440002 371.700012 325.97998 373.019989 325.859985 374.339996 c
328.73999 371.160004 l
eofill
n
301.5 423.600006 m
325.859985 423.839996 l
S
n
328.73999 423.839996 m
324.899994 421.919983 l
325.5 423.119995 325.5 424.559998 324.899994 425.759979 c
328.73999 423.839996 l
eofill
n
388.139984 407.459991 m
382.859985 339.359985 337.380005 320.519989 285.779999 365.100006 c
S
n
388.380005 410.339996 m
390.0 406.380005 l
388.859985 407.100006 387.419983 407.160004 386.160004 406.679993 c
388.380005 410.339996 l
eofill
n
301.5 438.779999 m
300.660004 454.800018 311.220001 470.940002 325.97998 476.100006 c
S
n
328.73999 476.879974 m
325.619995 474.0 l
325.859985 475.319977 325.440002 476.700012 324.539978 477.660004 c
328.73999 476.879974 l
eofill
0.0 sg
255.360001 488.579987 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
1 250 12 <0001002efe4a0256058e00130039402429042a08480503009801110a9809
13000101090aa80e222006300640060306801558a4182b10f65dedfd3c3c
103c003fed3fed3130015d13351617161215100007353636123534272e02
2e98658f9cfecff77b9f4d21194b7c05642a4b6692fe77d5fecafe016e25
45eb016bc5d5b08aa69a>ALALCB+TimesNewRomanPSMT AddT42Char 
ALALCB+TimesNewRomanPSMT /CharStrings get begin
/parenright 12 def
end
ALALCB+TimesNewRomanPSMT /Encoding get
dup 41 /parenright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 8.817703 -8.804001 0.0 0.0 0.0] Tf
(\)) show
255.360001 484.260193 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(2) show
255.360001 481.200439 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
1 118 11 <00010054fe4a027c058e0013003a40239611a71102860c8911020a980911
009801130100000a09a80e22500601068014545e182b10f65dedfd3c3c10
3c003fed3fed3130005d015d01152627260235100037150606021514171e
02027c9765909c0132f67b9e4e211a4a7dfe6f254c6691018ad4013601ff
6e2a44ecfe96c5d6af8aa79a>ALALCB+TimesNewRomanPSMT AddT42Char 
ALALCB+TimesNewRomanPSMT /CharStrings get begin
/parenleft 11 def
end
ALALCB+TimesNewRomanPSMT /Encoding get
dup 40 /parenleft put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\() show
259.019989 477.720001 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 3.673798 -3.668198 0.0 0.0 0.0] Tf
(p) show
259.019989 473.459869 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(i) show
257.519989 474.959991 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 5.878403 -5.869202 0.0 0.0 0.0] Tf
(s) show
257.519989 471.240143 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(s) show
255.360001 466.800018 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 1406 84 <0002002dfe4a03cb03890021002f0146400a061b061c3d2d4a2d0427b8ff
c0405d101b3f081b34027601aa11a912ad22a626a427aa2dab2eb5270b95
269c2eab1b03660181268c2e0348194a1b560103392d3b2f4601032d0a2d
2f3627039700012f2021100a100b300a09010830091120252b2011102221
182e2d102821b8039540130025241d1d0007280001011f1021141010212b
b8032e400c150b0a090e10302821101000bc020300210188002803814013
bf10ef1002108053351040263510401f223410b8ffc0b21c3510b8ffc040
201a3510401a1d34ef180118401e123f18401a3518401b35186c30101710
300a32b901e600182b2b103c2b10f62b2b2b5d2b2b2b2b2b2b5de9f4ed2b
103c2b10c0003f3c3fed870e2e2b0e7d10c42b183f003c10ed10e4011112
3939111239113939001112393910ed0110c00010ed0110c0870e3c7dc431
3001715d5d5d5d5d5d2b005d010106151416171633072137363736363713
060706232226353412373633321617370734262322001514163332373612
03cbfeb91617141f320afe210a621826311e8a847251466466ba98766047
5c171f474e397afef243303d4d759d0389fb964e161721080c252508090f
446d01edc14e37a35f97014c6a53454c70a24052fe5cba4b4e4467014300
>ALAKLK+TimesNewRomanPS-ItalicMT AddT42Char 
ALAKLK+TimesNewRomanPS-ItalicMT /CharStrings get begin
/q 84 def
end
ALAKLK+TimesNewRomanPS-ItalicMT /Encoding get
dup 113 /q put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 8.817703 -8.804001 0.0 0.0 0.0] Tf
(q) show
255.419998 377.759979 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 9.124008 -9.152298 0.0 0.0 0.0] Tf
(\)) show
255.419998 373.73996 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(3) show
255.419998 370.919739 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\() show
259.200012 367.440002 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 3.801498 -3.813293 0.0 0.0 0.0] Tf
(p) show
259.200012 363.240112 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(i) show
257.700012 364.73999 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 6.082703 -6.101501 0.0 0.0 0.0] Tf
(s) show
257.700012 361.019806 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(s) show
255.419998 356.579987 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 9.124008 -9.152298 0.0 0.0 0.0] Tf
(q) show
296.639984 351.059998 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 9.423508 -9.421402 0.0 0.0 0.0] Tf
(\)) show
296.639984 346.979614 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(0) show
296.639984 344.099792 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\() show
300.539978 341.519989 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 3.9263 -3.925598 0.0 0.0 0.0] Tf
(t) show
300.539978 337.320038 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(p) show
298.97998 339.419983 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 6.282196 -6.280807 0.0 0.0 0.0] Tf
(s) show
298.97998 334.739746 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(s) show
296.639984 330.419983 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 9.423508 -9.421402 0.0 0.0 0.0] Tf
(q) show
385.079987 510.300018 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 9.590393 -9.569 0.0 0.0 0.0] Tf
(\)) show
385.079987 506.039978 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(0) show
385.079987 503.0401 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\() show
389.039978 500.399994 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 3.995895 -3.986893 0.0 0.0 0.0] Tf
(t) show
389.039978 496.19989 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(c) show
387.419983 498.179993 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 6.393494 -6.379395 0.0 0.0 0.0] Tf
(s) show
387.419983 493.980103 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(s) show
385.079987 489.600006 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 9.590393 -9.569 0.0 0.0 0.0] Tf
(q) show
319.139984 403.559998 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 9.412506 -9.386703 0.0 0.0 0.0] Tf
(\)) show
319.139984 399.600159 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(1) show
319.139984 397.260223 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\() show
323.100006 393.600006 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 3.921799 -3.910995 0.0 0.0 0.0] Tf
(c) show
323.100006 388.560089 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(p) show
321.539978 391.079987 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 6.274902 -6.257797 0.0 0.0 0.0] Tf
(s) show
321.539978 385.440094 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(s) show
319.139984 380.579987 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 9.412506 -9.386703 0.0 0.0 0.0] Tf
(q) show
319.200012 447.600006 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 9.793396 -9.777206 0.0 0.0 0.0] Tf
(\)) show
319.200012 443.399628 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(2) show
319.200012 440.399902 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\() show
323.279999 437.100006 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 4.080505 -4.0737 0.0 0.0 0.0] Tf
(c) show
323.279999 432.600037 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(p) show
321.660004 434.819977 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 6.529007 -6.518005 0.0 0.0 0.0] Tf
(s) show
321.660004 429.839661 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(s) show
319.200012 425.399994 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 9.793396 -9.777206 0.0 0.0 0.0] Tf
(q) show
318.47998 499.200012 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N18 [0.0 9.788696 -9.787506 0.0 0.0 0.0] Tf
(\)) show
318.47998 494.999695 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(3) show
318.47998 492.06015 m
%ADOBeginSubsetFont: ALALCB+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALALCB+TimesNewRomanPSMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\() show
322.559998 488.579987 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 4.078598 -4.078094 0.0 0.0 0.0] Tf
(c) show
322.559998 483.779877 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(p) show
320.940002 486.179993 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 6.525696 -6.524994 0.0 0.0 0.0] Tf
(s) show
320.940002 480.840027 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(s) show
318.47998 476.160004 m
%ADOBeginSubsetFont: ALAKLK+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ALAKLK+TimesNewRomanPS-ItalicMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N16 [0.0 9.788696 -9.787506 0.0 0.0 0.0] Tf
(q) show
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
